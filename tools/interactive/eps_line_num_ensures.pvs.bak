eps_line_num_ensures: THEORY
 BEGIN
  IMPORTING int@Int
  IMPORTING int@Abs
  IMPORTING int@MinMax
  IMPORTING int@ComputerDivision
  IMPORTING real@Real
  IMPORTING real@RealInfix
  IMPORTING real@Abs
  IMPORTING real@FromInt
  IMPORTING real@Truncate
  IMPORTING real@Square
  IMPORTING real@ExpLog
  IMPORTING real@PowerReal
  IMPORTING frama_c_wp_qed@Qed
  IMPORTING frama_c_wp_reflow@Interface
  IMPORTING map@Map
  IMPORTING frama_c_wp_cint@Cint
  IMPORTING frama_c_wp_cmath@Cmath
  IMPORTING frama_c_wp_cmath@Square
  IMPORTING frama_c_wp_cmath@ExpLog
  IMPORTING frama_c_wp_cfloat@Cfloat
  IMPORTING ieee_float@RoundingMode
  IMPORTING bv@Pow2int
  IMPORTING ieee_float@Float32
  IMPORTING ieee_float@Float64
  IMPORTING ieee_float@FloatConverter
  % do not edit above this line
  % surround new declarations you insert below with blank lines
  
  % Why3 string
  string: TYPE+
  
  % Why3 unit
  unit: TYPE+ = []
  
  % Why3 s8_maybeint
  s8_maybeint: DATATYPE
   BEGIN
    s8_maybeint1(x:int, x1:int): s8_maybeint1?
   END s8_maybeint
  
  % Why3 f8_maybeint_value
  f8_maybeint_value(v:s8_maybeint): int =
    CASES v OF
     s8_maybeint1(x, x1): x1
    ENDCASES
  
  % Why3 f8_maybeint_isvalid
  f8_maybeint_isvalid(v:s8_maybeint): int =
    CASES v OF
     s8_maybeint1(x, x1): x
    ENDCASES
  
  % Why3 iss8_maybeint
  iss8_maybeint(s:s8_maybeint): bool =
    frama_c_wp_cint@Cint.is_bool(f8_maybeint_isvalid(s)) AND
    frama_c_wp_cint@Cint.is_sint32(f8_maybeint_value(s))
  
  % Why3 l_ulp_dp
  l_ulp_dp(x:real): real = IF (x = 0) THEN (2 ^ (- 1074))
    ELSE (2 ^ (((- 52) + max((- 1022), floor(reals@reals_safe_ops.div_safe(real@ExpLog.log(abs(x)),real@ExpLog.log(2))))))) ENDIF
  
  % Why3 l_sgn_fp
  l_sgn_fp(x_double:double): int = IF (0 <= safe_proj_double(x_double))
    THEN 1 ELSE (- 1) ENDIF
  
  % Why3 l_dmul
  l_dmul(x:double, y:double): double = mul_double(x,y)
  
  % Why3 l_dadd
  l_dadd(x:double, y:double): double = add_double(x,y)
  
  % Why3 l_dsub
  l_dsub(x:double, y:double): double = sub_double(x,y)
  
  % Why3 l_eps_line_fp
  l_eps_line_fp(sx_double:double, vx_double:double, sy_double:double,
    vy_double:double): int = l_sgn_fp(l_dmul(l_dadd(l_dmul(sx_double,
    vx_double), l_dmul(sy_double, vy_double)), l_dsub(l_dmul(sx_double,
    vx_double), l_dmul(sy_double, vy_double))))
  
  % Why3 p_eps_line_stable_paths
  p_eps_line_stable_paths(sx:real, vx:real, sy:real, vy:real,
    sx_double:double, vx_double:double, sy_double:double,
    vy_double:double): bool =
    (((((sx * vx) + (sy * vy)) * (((- 1) * (sy * vy)) + (sx * vx))) <  0) AND
    (safe_proj_double(l_dmul(l_dadd(l_dmul(sx_double, vx_double),
    l_dmul(sy_double, vy_double)), l_dsub(l_dmul(sx_double, vx_double),
    l_dmul(sy_double, vy_double)))) <  0)) OR
    ((0 <= (((sx * vx) + (sy * vy)) * (((- 1) * (sy * vy)) + (sx * vx)))) AND
    (0 <= safe_proj_double(l_dmul(l_dadd(l_dmul(sx_double, vx_double),
    l_dmul(sy_double, vy_double)), l_dsub(l_dmul(sx_double, vx_double),
    l_dmul(sy_double, vy_double))))))
  
  % Why3 l_sgn
  l_sgn(x:real): int = IF (0 <= x) THEN 1 ELSE (- 1) ENDIF
  
  % Why3 l_eps_line
  l_eps_line(sx:real, vx:real, sy:real, vy:real): int =
    l_sgn((((sx * vx) + (sy * vy)) * (((- 1) * (sy * vy)) + (sx * vx))))
  
  % Why3 fliteral
  fliteral: double
  
  % Why3 fliteral_axiom
  fliteral_axiom: AXIOM finite?_double(fliteral) AND
    (safe_proj_double(fliteral) = (8356773506842626 / 274877906944))
  
  % Why3 eps_line_num_ensures
  eps_line_num_ensures: THEOREM FORALL (m:s8_maybeint, r:real, r1:real, r2:real, r3:real,
    f:double, f1:double, f2:double, f3:double):
    (NOT (f8_maybeint_isvalid(m) = 0)) => ((r3 <= 60000) => ((r2 <= 60000) =>
    ((r1 <= 60000) => ((r <= 60000) => (((- 60000) <= r3) =>
    (((- 60000) <= r2) => (((- 60000) <= r1) => (((- 60000) <= r) =>
    ((abs((safe_proj_double(f3) + ((- 1) * r3))) <= reals@reals_safe_ops.div_safe(l_ulp_dp(r3),2)) =>
    ((abs((safe_proj_double(f1) + ((- 1) * r2))) <= reals@reals_safe_ops.div_safe(l_ulp_dp(r2),2)) =>
    ((abs((safe_proj_double(f2) + ((- 1) * r1))) <= reals@reals_safe_ops.div_safe(l_ulp_dp(r1),2)) =>
    ((abs((safe_proj_double(f) + ((- 1) * r))) <= reals@reals_safe_ops.div_safe(l_ulp_dp(r),2)) =>
    (iss8_maybeint(m) => (finite?_double(f3) => (finite?_double(f2) =>
    (finite?_double(f1) => (finite?_double(f) =>
    ((finite?_double(fliteral) => (f8_maybeint_value(m) = l_eps_line_fp(f,
    f2, f1, f3))) => ((FORALL (r4:real, r5:real, r6:real, r7:real):
    (abs((safe_proj_double(l_dmul(l_dadd(l_dmul(f, f2), l_dmul(f1, f3)),
    l_dsub(l_dmul(f, f2), l_dmul(f1,
    f3)))) + ((- 1) * (((r4 * r5) + (r6 * r7)) * (((- 1) * (r6 * r7)) + (r4 * r5)))))) <= reals@reals_safe_ops.div_safe(4178386753421313,137438953472)) =>
    (finite?_double(fliteral) => p_eps_line_stable_paths(r4, r5, r6, r7, f,
    f2, f1, f3))) => ((abs((((- 1) * l_eps_line(r, r1, r2,
    r3)) + f8_maybeint_value(m)))) <= 0))))))))))))))))))))
  
  
 END eps_line_num_ensures
 
% This file is automatically generated by PRECiSA 

cert_functioncall10: THEORY
BEGIN
IMPORTING PRECiSA@strategies
IMPORTING axm_bnd@aerr_ulp__double
IMPORTING axm_bnd@aerr_ulp__single
IMPORTING functioncall10_fp
IMPORTING functioncall10

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

% Floating-Point Result: Dadd(X, Dmul(X, 2))
% Control Flow: Stable
f_fp_0 : LEMMA
FORALL(e_X: nonneg_real, r_X: real, X: double):
finite?(X) AND
abs(DtoR(X) - r_X)<=e_X
IMPLIES
abs(DtoR(f_fp(X)) - f(r_X))<=aerr_ulp_dp_add(r_X, e_X, (r_X * 2), aerr_ulp_dp_mul(r_X, e_X, 2, (0 / 1)))


%|- f_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: Dadd(X, Dmul(X, 2))
% Control Flow: Stable
g_fp_0 : LEMMA
FORALL(e_X: nonneg_real, r_X: real, X: double):
finite?(X) AND
abs(DtoR(X) - r_X)<=e_X
IMPLIES
abs(DtoR(g_fp(X)) - g(r_X))<=aerr_ulp_dp_add((r_X - 1), aerr_ulp_dp_sub(r_X, e_X, 1, (0 / 1)), ((r_X - 1) * 2), aerr_ulp_dp_mul((r_X - 1), aerr_ulp_dp_sub(r_X, e_X, 1, (0 / 1)), 2, (0 / 1)))


%|- g_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: Dadd(X, Dmul(X, 2))
% Control Flow: Stable
h_fp_0 : LEMMA
FORALL(e_X: nonneg_real, r_X: real, X: double):
finite?(X) AND
abs(DtoR(X) - r_X)<=e_X
IMPLIES
abs(DtoR(h_fp(X)) - h(r_X))<=aerr_ulp_dp_add(g(r_X), aerr_ulp_dp_add((r_X - 1), aerr_ulp_dp_sub(r_X, e_X, 1, (0 / 1)), ((r_X - 1) * 2), aerr_ulp_dp_mul((r_X - 1), aerr_ulp_dp_sub(r_X, e_X, 1, (0 / 1)), 2, (0 / 1))), (g(r_X) * 2), aerr_ulp_dp_mul(g(r_X), aerr_ulp_dp_add((r_X - 1), aerr_ulp_dp_sub(r_X, e_X, 1, (0 / 1)), ((r_X - 1) * 2), aerr_ulp_dp_mul((r_X - 1), aerr_ulp_dp_sub(r_X, e_X, 1, (0 / 1)), 2, (0 / 1))), 2, (0 / 1)))


%|- h_fp_0: PROOF
%|- (precisa)
%|- QED


END cert_functioncall10
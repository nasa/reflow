% This file is automatically generated by PRECiSA 

cert_let9: THEORY
BEGIN
IMPORTING PRECiSA@strategies
IMPORTING axm_bnd@aerr_ulp__double
IMPORTING axm_bnd@aerr_ulp__single
IMPORTING let9_fp
IMPORTING let9

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

% Floating-Point Result: -1, 1
% Control Flow: Stable
sign_fp_0 : LEMMA
FORALL(e_x: nonneg_real, r_x: real, x: double):
finite?(x) AND finite?(x) AND finite?(ItoD(0)) AND
abs(DtoR(x) - r_x)<=e_x
AND (((NOT((r_x >= 0)) AND TRUE) AND (NOT((x >= ItoD(0))) AND TRUE)) OR (((r_x >= 0) AND TRUE) AND ((x >= ItoD(0)) AND TRUE)))
IMPLIES
abs(sign_fp(x) - sign(r_x))<=max((0 / 1), (0 / 1))


%|- sign_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: a, b
% Control Flow: Stable
max__fp_0 : LEMMA
FORALL(e_a, e_b: nonneg_real, r_a, r_b: real, a: double, b: double):
finite?(a) AND finite?(b) AND finite?(Dsub(a, b)) AND finite?(ItoD(0)) AND
abs(DtoR(a) - r_a)<=e_a AND abs(DtoR(b) - r_b)<=e_b
AND (((NOT(((r_a - r_b) < 0)) AND TRUE) AND (NOT((Dsub(a, b) < ItoD(0))) AND TRUE)) OR ((((r_a - r_b) < 0) AND TRUE) AND ((Dsub(a, b) < ItoD(0)) AND TRUE)))
IMPLIES
abs(DtoR(max__fp(a, b)) - max_(r_a, r_b))<=max(e_b, e_a)


%|- max__fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: a, b
% Control Flow: Stable
min__fp_0 : LEMMA
FORALL(e_a, e_b: nonneg_real, r_a, r_b: real, a: double, b: double):
finite?(a) AND finite?(b) AND finite?(Dsub(a, b)) AND finite?(ItoD(0)) AND
abs(DtoR(a) - r_a)<=e_a AND abs(DtoR(b) - r_b)<=e_b
AND (((NOT(((r_a - r_b) > 0)) AND TRUE) AND (NOT((Dsub(a, b) > ItoD(0))) AND TRUE)) OR ((((r_a - r_b) > 0) AND TRUE) AND ((Dsub(a, b) > ItoD(0)) AND TRUE)))
IMPLIES
abs(DtoR(min__fp(a, b)) - min_(r_a, r_b))<=max(e_b, e_a)


%|- min__fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: Ddiv(Dsub(Dmul(ItoD(--1), H), sz), nzvz), Ddiv(Dsub(Dmul(ItoD(-1), H), sz), nzvz)
% Control Flow: Stable
Theta_H_neg_fp_0 : LEMMA
FORALL(e_sz, e_nzvz, e_H: nonneg_real, r_sz, r_nzvz, r_H: real, sz: double, nzvz: double, H: double):
finite?(sz) AND finite?(nzvz) AND finite?(H) AND
abs(DtoR(sz) - r_sz)<=e_sz AND abs(DtoR(nzvz) - r_nzvz)<=e_nzvz AND abs(DtoR(H) - r_H)<=e_H
AND (((NOT((r_nzvz >= 0)) AND (r_nzvz /= 0)) AND (NOT((nzvz >= ItoD(0))) AND (nzvz /= ItoD(0)))) OR (((r_nzvz >= 0) AND (r_nzvz /= 0)) AND ((nzvz >= ItoD(0)) AND (nzvz /= ItoD(0)))))
IMPLIES
abs(DtoR(Theta_H_neg_fp(sz, nzvz, H)) - Theta_H_neg(r_sz, r_nzvz, r_H))<=max(aerr_ulp_dp_div(((--1 * r_H) - r_sz), max(aerr_ulp_dp_sub((--1 * r_H), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_H, e_H), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_H, e_H)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_H), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_H, e_H), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_H, e_H)), r_sz, e_sz)), r_nzvz, e_nzvz), aerr_ulp_dp_div(((-1 * r_H) - r_sz), max(aerr_ulp_dp_sub((--1 * r_H), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_H, e_H), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_H, e_H)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_H), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_H, e_H), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_H, e_H)), r_sz, e_sz)), r_nzvz, e_nzvz))


%|- Theta_H_neg_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: Ddiv(Dsub(Dmul(ItoD(-1), H), sz), nzvz), Ddiv(Dsub(Dmul(ItoD(1), H), sz), nzvz)
% Control Flow: Stable
Theta_H_pos_fp_0 : LEMMA
FORALL(e_sz, e_nzvz, e_H: nonneg_real, r_sz, r_nzvz, r_H: real, sz: double, nzvz: double, H: double):
finite?(sz) AND finite?(nzvz) AND finite?(H) AND
abs(DtoR(sz) - r_sz)<=e_sz AND abs(DtoR(nzvz) - r_nzvz)<=e_nzvz AND abs(DtoR(H) - r_H)<=e_H
AND (((NOT((r_nzvz >= 0)) AND (r_nzvz /= 0)) AND (NOT((nzvz >= ItoD(0))) AND (nzvz /= ItoD(0)))) OR (((r_nzvz >= 0) AND (r_nzvz /= 0)) AND ((nzvz >= ItoD(0)) AND (nzvz /= ItoD(0)))))
IMPLIES
abs(DtoR(Theta_H_pos_fp(sz, nzvz, H)) - Theta_H_pos(r_sz, r_nzvz, r_H))<=max(aerr_ulp_dp_div(((-1 * r_H) - r_sz), max(aerr_ulp_dp_sub((-1 * r_H), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_H, e_H), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_H, e_H)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_H), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_H, e_H), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_H, e_H)), r_sz, e_sz)), r_nzvz, e_nzvz), aerr_ulp_dp_div(((1 * r_H) - r_sz), max(aerr_ulp_dp_sub((-1 * r_H), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_H, e_H), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_H, e_H)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_H), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_H, e_H), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_H, e_H)), r_sz, e_sz)), r_nzvz, e_nzvz))


%|- Theta_H_pos_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: Ddiv(Dsub(Dmul(ItoD(-1), H), sz), nzvz), Ddiv(Dsub(Dmul(ItoD(1), H), sz), nzvz)
% Control Flow: Stable
coalt_exit_fp_0 : LEMMA
FORALL(e_sz, e_nzvz, e_ZTHR: nonneg_real, r_sz, r_nzvz, r_ZTHR: real, sz: double, nzvz: double, ZTHR: double):
finite?(sz) AND finite?(nzvz) AND finite?(ZTHR) AND
abs(DtoR(sz) - r_sz)<=e_sz AND abs(DtoR(nzvz) - r_nzvz)<=e_nzvz AND abs(DtoR(ZTHR) - r_ZTHR)<=e_ZTHR
AND (((NOT((r_nzvz >= 0)) AND (r_nzvz /= 0)) AND (NOT((nzvz >= ItoD(0))) AND (nzvz /= ItoD(0)))) OR (((r_nzvz >= 0) AND (r_nzvz /= 0)) AND ((nzvz >= ItoD(0)) AND (nzvz /= ItoD(0)))))
IMPLIES
abs(DtoR(coalt_exit_fp(sz, nzvz, ZTHR)) - coalt_exit(r_sz, r_nzvz, r_ZTHR))<=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_nzvz, e_nzvz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_nzvz, e_nzvz))


%|- coalt_exit_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: LET Z_COA:double=Dmul(Dabs(nzvz), TCOA)
                         IN Ddiv(Dsub(Dmul(ItoD(--1), H), sz), nzvz), LET Z_COA:double=Dmul(Dabs(nzvz), TCOA)
                                                                      IN Ddiv(Dsub(Dmul(ItoD(-1), H), sz), nzvz)
% Control Flow: Stable
coalt_entry_fp_0 : LEMMA
FORALL(e_sz, e_nzvz, e_TCOA, e_ZTHR: nonneg_real, r_sz, r_nzvz, r_TCOA, r_ZTHR: real, sz: double, nzvz: double, TCOA: double, ZTHR: double):
finite?(sz) AND finite?(nzvz) AND finite?(TCOA) AND finite?(ZTHR) AND finite?(Dsub(ZTHR, Z_COA)) AND finite?(ItoD(0)) AND
abs(DtoR(sz) - r_sz)<=e_sz AND abs(DtoR(nzvz) - r_nzvz)<=e_nzvz AND abs(DtoR(TCOA) - r_TCOA)<=e_TCOA AND abs(DtoR(ZTHR) - r_ZTHR)<=e_ZTHR
AND ((((NOT(((r_ZTHR - (abs(r_nzvz) * r_TCOA)) <= 0)) AND NOT((r_nzvz >= 0))) AND (r_nzvz /= 0)) AND ((NOT((Dsub(ZTHR, Dmul(Dabs(nzvz), TCOA)) <= ItoD(0))) AND NOT((nzvz >= ItoD(0)))) AND (nzvz /= ItoD(0)))) OR (((NOT(((r_ZTHR - (abs(r_nzvz) * r_TCOA)) <= 0)) AND (r_nzvz >= 0)) AND (r_nzvz /= 0)) AND ((NOT((Dsub(ZTHR, Dmul(Dabs(nzvz), TCOA)) <= ItoD(0))) AND (nzvz >= ItoD(0))) AND (nzvz /= ItoD(0)))) OR (((((r_ZTHR - (abs(r_nzvz) * r_TCOA)) <= 0) AND NOT((r_nzvz >= 0))) AND (r_nzvz /= 0)) AND (((Dsub(ZTHR, Dmul(Dabs(nzvz), TCOA)) <= ItoD(0)) AND NOT((nzvz >= ItoD(0)))) AND (nzvz /= ItoD(0)))) OR (((((r_ZTHR - (abs(r_nzvz) * r_TCOA)) <= 0) AND (r_nzvz >= 0)) AND (r_nzvz /= 0)) AND (((Dsub(ZTHR, Dmul(Dabs(nzvz), TCOA)) <= ItoD(0)) AND (nzvz >= ItoD(0))) AND (nzvz /= ItoD(0)))))
IMPLIES
abs(DtoR(coalt_entry_fp(sz, nzvz, TCOA, ZTHR)) - coalt_entry(r_sz, r_nzvz, r_TCOA, r_ZTHR))<=LET Z_COA:real=(abs(r_nzvz) * r_TCOA),
                                                                                                 Err_Z_COA:real=aerr_ulp_dp_mul(abs(r_nzvz), aerr_ulp_dp_abs(r_nzvz, e_nzvz), r_TCOA, e_TCOA)
                                                                                             IN max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_nzvz, e_nzvz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_nzvz, e_nzvz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_nzvz, e_nzvz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_nzvz, e_nzvz)))


%|- coalt_entry_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: Dsub(B, T), Dsub(T, B), LET centry:double=coalt_entry_fp(sz, vz, TCOA, ZTHR)
                                                 IN LET cexit:double=coalt_exit_fp(sz, vz, ZTHR)
                                                    IN Dsub(B, T), LET centry:double=coalt_entry_fp(sz, vz, TCOA, ZTHR)
                                                                   IN LET cexit:double=coalt_exit_fp(sz, vz, ZTHR)
                                                                      IN Dsub(a, a), LET centry:double=coalt_entry_fp(sz, vz, TCOA, ZTHR)
                                                                                     IN LET cexit:double=coalt_exit_fp(sz, vz, ZTHR)
                                                                                        IN Dsub(a, b), LET centry:double=coalt_entry_fp(sz, vz, TCOA, ZTHR)
                                                                                                       IN LET cexit:double=coalt_exit_fp(sz, vz, ZTHR)
                                                                                                          IN Dsub(b, a), LET centry:double=coalt_entry_fp(sz, vz, TCOA, ZTHR)
                                                                                                                         IN LET cexit:double=coalt_exit_fp(sz, vz, ZTHR)
                                                                                                                            IN Dsub(b, b)
% Control Flow: Stable
vertical_WCV_exit_minus_entry_fp_0 : LEMMA
FORALL(e_B, e_T, e_sz, e_vz, e_TCOA, e_ZTHR: nonneg_real, r_B, r_T, r_sz, r_vz, r_TCOA, r_ZTHR: real, B: double, T: double, sz: double, vz: double, TCOA: double, ZTHR: double):
finite?(B) AND finite?(T) AND finite?(sz) AND finite?(vz) AND finite?(TCOA) AND finite?(ZTHR) AND finite?(Dsub(T, centry)) AND finite?(ItoD(0)) AND
abs(DtoR(B) - r_B)<=e_B AND abs(DtoR(T) - r_T)<=e_T AND abs(DtoR(sz) - r_sz)<=e_sz AND abs(DtoR(vz) - r_vz)<=e_vz AND abs(DtoR(TCOA) - r_TCOA)<=e_TCOA AND abs(DtoR(ZTHR) - r_ZTHR)<=e_ZTHR
AND ((((NOT(((abs(r_sz) - r_ZTHR) <= 0)) AND NOT((r_vz /= 0))) AND TRUE) AND ((NOT((Dsub(Dabs(sz), ZTHR) <= ItoD(0))) AND NOT((vz /= ItoD(0)))) AND TRUE)) OR ((((r_vz /= 0) AND (NOT(((r_T - coalt_entry(r_sz, r_vz, r_TCOA, r_ZTHR)) < 0)) AND (NOT(((r_T - coalt_exit(r_sz, r_vz, r_ZTHR)) > 0)) AND NOT(((r_B - coalt_entry(r_sz, r_vz, r_TCOA, r_ZTHR)) < 0))))) AND TRUE) AND (((vz /= ItoD(0)) AND (NOT((Dsub(T, coalt_entry_fp(sz, vz, TCOA, ZTHR)) < ItoD(0))) AND (NOT((Dsub(T, coalt_exit_fp(sz, vz, ZTHR)) > ItoD(0))) AND NOT((Dsub(B, coalt_entry_fp(sz, vz, TCOA, ZTHR)) < ItoD(0)))))) AND TRUE)) OR ((((r_vz /= 0) AND (NOT(((r_T - coalt_entry(r_sz, r_vz, r_TCOA, r_ZTHR)) < 0)) AND (NOT(((r_T - coalt_exit(r_sz, r_vz, r_ZTHR)) > 0)) AND ((r_B - coalt_entry(r_sz, r_vz, r_TCOA, r_ZTHR)) < 0)))) AND TRUE) AND (((vz /= ItoD(0)) AND (NOT((Dsub(T, coalt_entry_fp(sz, vz, TCOA, ZTHR)) < ItoD(0))) AND (NOT((Dsub(T, coalt_exit_fp(sz, vz, ZTHR)) > ItoD(0))) AND (Dsub(B, coalt_entry_fp(sz, vz, TCOA, ZTHR)) < ItoD(0))))) AND TRUE)) OR ((((r_vz /= 0) AND (NOT(((r_T - coalt_entry(r_sz, r_vz, r_TCOA, r_ZTHR)) < 0)) AND (((r_T - coalt_exit(r_sz, r_vz, r_ZTHR)) > 0) AND NOT(((r_B - coalt_entry(r_sz, r_vz, r_TCOA, r_ZTHR)) < 0))))) AND TRUE) AND (((vz /= ItoD(0)) AND (NOT((Dsub(T, coalt_entry_fp(sz, vz, TCOA, ZTHR)) < ItoD(0))) AND ((Dsub(T, coalt_exit_fp(sz, vz, ZTHR)) > ItoD(0)) AND NOT((Dsub(B, coalt_entry_fp(sz, vz, TCOA, ZTHR)) < ItoD(0)))))) AND TRUE)) OR ((((r_vz /= 0) AND (NOT(((r_T - coalt_entry(r_sz, r_vz, r_TCOA, r_ZTHR)) < 0)) AND (((r_T - coalt_exit(r_sz, r_vz, r_ZTHR)) > 0) AND ((r_B - coalt_entry(r_sz, r_vz, r_TCOA, r_ZTHR)) < 0)))) AND TRUE) AND (((vz /= ItoD(0)) AND (NOT((Dsub(T, coalt_entry_fp(sz, vz, TCOA, ZTHR)) < ItoD(0))) AND ((Dsub(T, coalt_exit_fp(sz, vz, ZTHR)) > ItoD(0)) AND (Dsub(B, coalt_entry_fp(sz, vz, TCOA, ZTHR)) < ItoD(0))))) AND TRUE)) OR ((((r_vz /= 0) AND (NOT(((r_ZTHR - (abs(r_vz) * r_TCOA)) <= 0)) AND NOT((r_vz >= 0)))) AND (r_vz /= 0)) AND (((vz /= ItoD(0)) AND (NOT((Dsub(ZTHR, Dmul(Dabs(vz), TCOA)) <= ItoD(0))) AND NOT((vz >= ItoD(0))))) AND (vz /= ItoD(0)))) OR ((((r_vz /= 0) AND (NOT(((r_ZTHR - (abs(r_vz) * r_TCOA)) <= 0)) AND (r_vz >= 0))) AND (r_vz /= 0)) AND (((vz /= ItoD(0)) AND (NOT((Dsub(ZTHR, Dmul(Dabs(vz), TCOA)) <= ItoD(0))) AND (vz >= ItoD(0)))) AND (vz /= ItoD(0)))) OR ((((r_vz /= 0) AND (((r_ZTHR - (abs(r_vz) * r_TCOA)) <= 0) AND NOT((r_vz >= 0)))) AND (r_vz /= 0)) AND (((vz /= ItoD(0)) AND ((Dsub(ZTHR, Dmul(Dabs(vz), TCOA)) <= ItoD(0)) AND NOT((vz >= ItoD(0))))) AND (vz /= ItoD(0)))) OR ((((r_vz /= 0) AND (((r_ZTHR - (abs(r_vz) * r_TCOA)) <= 0) AND (r_vz >= 0))) AND (r_vz /= 0)) AND (((vz /= ItoD(0)) AND ((Dsub(ZTHR, Dmul(Dabs(vz), TCOA)) <= ItoD(0)) AND (vz >= ItoD(0)))) AND (vz /= ItoD(0)))) OR ((((r_vz /= 0) AND NOT((r_vz >= 0))) AND (r_vz /= 0)) AND (((vz /= ItoD(0)) AND NOT((vz >= ItoD(0)))) AND (vz /= ItoD(0)))) OR ((((r_vz /= 0) AND ((r_T - coalt_entry(r_sz, r_vz, r_TCOA, r_ZTHR)) < 0)) AND TRUE) AND (((vz /= ItoD(0)) AND (Dsub(T, coalt_entry_fp(sz, vz, TCOA, ZTHR)) < ItoD(0))) AND TRUE)) OR ((((r_vz /= 0) AND (r_vz >= 0)) AND (r_vz /= 0)) AND (((vz /= ItoD(0)) AND (vz >= ItoD(0))) AND (vz /= ItoD(0)))) OR (((((abs(r_sz) - r_ZTHR) <= 0) AND NOT((r_vz /= 0))) AND TRUE) AND (((Dsub(Dabs(sz), ZTHR) <= ItoD(0)) AND NOT((vz /= ItoD(0)))) AND TRUE)))
IMPLIES
abs(DtoR(vertical_WCV_exit_minus_entry_fp(B, T, sz, vz, TCOA, ZTHR)) - vertical_WCV_exit_minus_entry(r_B, r_T, r_sz, r_vz, r_TCOA, r_ZTHR))<=max(max(max(max(max(max(max(max(max(LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
                                                                                                                                                                                                 IN (((--1 * r_ZTHR) - r_sz) / r_vz),
                                                                                                                                                                                     Err_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
                                                                                                                                                                                                         Err_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
                                                                                                                                                                                                     IN max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
                                                                                                                                                                                 IN LET cexit:real=(((-1 * r_ZTHR) - r_sz) / r_vz),
                                                                                                                                                                                        Err_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
                                                                                                                                                                                    IN max(aerr_ulp_dp_sub(r_B, e_B, r_T, e_T), max(aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B)))), LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
r_Z_COA) - r_sz) / r_vz),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Err_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Err_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
cexit:real=(((-1 * r_ZTHR) - r_sz) / r_vz),
rr_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
max(aerr_ulp_dp_sub(r_B, e_B, r_T, e_T), max(aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B))))), LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
r_ZTHR) - r_sz) / r_vz),
rr_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
rr_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
cexit:real=(((-1 * r_ZTHR) - r_sz) / r_vz),
rr_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
max(aerr_ulp_dp_sub(r_B, e_B, r_T, e_T), max(aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B))))), LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
r_Z_COA) - r_sz) / r_vz),
rr_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Err_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
cexit:real=(((-1 * r_ZTHR) - r_sz) / r_vz),
rr_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   IN max(aerr_ulp_dp_sub(r_B, e_B, r_T, e_T), max(aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B))))), LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
r_ZTHR) - r_sz) / r_vz),
rr_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
rr_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
cexit:real=(((1 * r_ZTHR) - r_sz) / r_vz),
rr_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
max(aerr_ulp_dp_sub(r_B, e_B, r_T, e_T), max(aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B))))), LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
r_Z_COA) - r_sz) / r_vz),
rr_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
rr_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                IN LET cexit:real=(((1 * r_ZTHR) - r_sz) / r_vz),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Err_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
max(aerr_ulp_dp_sub(r_B, e_B, r_T, e_T), max(aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B))))), LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
r_ZTHR) - r_sz) / r_vz),
rr_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
rr_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
cexit:real=(((1 * r_ZTHR) - r_sz) / r_vz),
rr_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   IN max(aerr_ulp_dp_sub(r_B, e_B, r_T, e_T), max(aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B))))), LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
r_Z_COA) - r_sz) / r_vz),
rr_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
rr_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
cexit:real=(((1 * r_ZTHR) - r_sz) / r_vz),
rr_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
max(aerr_ulp_dp_sub(r_B, e_B, r_T, e_T), max(aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B))))), aerr_ulp_dp_sub(r_T, e_T, r_B, e_B)), aerr_ulp_dp_sub(r_B, e_B, r_T, e_T))


%|- vertical_WCV_exit_minus_entry_fp_0: PROOF
%|- (precisa)
%|- QED


END cert_let9
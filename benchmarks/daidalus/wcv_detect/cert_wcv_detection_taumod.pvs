% This file is automatically generated by PRECiSA 

cert_wcv_detection_taumod: THEORY
BEGIN
IMPORTING PRECiSA@strategies
IMPORTING axm_bnd@aerr_ulp__double
IMPORTING axm_bnd@aerr_ulp__single
IMPORTING wcv_detection_taumod_fp
IMPORTING wcv_detection_taumod

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

% Floating-Point Result: -1, Dneg(Ddiv(sz, vz))
% Control Flow: Stable
tcoa_fp_0 : LEMMA
FORALL(e_sz, e_vz: nonneg_real, r_sz, r_vz: real, sz: double, vz: double):
finite?(sz) AND finite?(vz) AND finite?(Dmul(sz, vz)) AND finite?(ItoD(0)) AND
abs(DtoR(sz) - r_sz)<=e_sz AND abs(DtoR(vz) - r_vz)<=e_vz
AND (((NOT(((r_sz * r_vz) < 0)) AND TRUE) AND (NOT((Dmul(sz, vz) < ItoD(0))) AND TRUE)) OR ((((r_sz * r_vz) < 0) AND (r_vz /= 0)) AND ((Dmul(sz, vz) < ItoD(0)) AND (vz /= ItoD(0)))))
IMPLIES
abs(DtoR(tcoa_fp(sz, vz)) - tcoa(r_sz, r_vz))<=max(aerr_ulp_dp_neg(div_safe(r_sz, r_vz), aerr_ulp_dp_div(r_sz, e_sz, r_vz, e_vz)), (0 / 1))


%|- tcoa_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: 0, Ddiv(Dneg(Dadd(Dmul(sx, vx), Dmul(sy, vy))), Dadd(Dmul(vx, vx), Dmul(vy, vy)))
% Control Flow: Stable
tcpa_fp_0 : LEMMA
FORALL(e_sx, e_vx, e_sy, e_vy: nonneg_real, r_sx, r_vx, r_sy, r_vy: real, sx: double, vx: double, sy: double, vy: double):
finite?(sx) AND finite?(vx) AND finite?(sy) AND finite?(vy) AND finite?(Dadd(Dmul(vx, vx), Dmul(vy, vy))) AND finite?(ItoD(0)) AND
abs(DtoR(sx) - r_sx)<=e_sx AND abs(DtoR(vx) - r_vx)<=e_vx AND abs(DtoR(sy) - r_sy)<=e_sy AND abs(DtoR(vy) - r_vy)<=e_vy
AND (((NOT((((r_vx * r_vx) + (r_vy * r_vy)) /= 0)) AND TRUE) AND (NOT((Dadd(Dmul(vx, vx), Dmul(vy, vy)) /= ItoD(0))) AND TRUE)) OR (((((r_vx * r_vx) + (r_vy * r_vy)) /= 0) AND (((r_vx * r_vx) + (r_vy * r_vy)) /= 0)) AND ((Dadd(Dmul(vx, vx), Dmul(vy, vy)) /= ItoD(0)) AND (Dadd(Dmul(vx, vx), Dmul(vy, vy)) /= ItoD(0)))))
IMPLIES
abs(DtoR(tcpa_fp(sx, vx, sy, vy)) - tcpa(r_sx, r_vx, r_sy, r_vy))<=max(aerr_ulp_dp_div(-(((r_sx * r_vx) + (r_sy * r_vy))), aerr_ulp_dp_neg(((r_sx * r_vx) + (r_sy * r_vy)), aerr_ulp_dp_add((r_sx * r_vx), aerr_ulp_dp_mul(r_sx, e_sx, r_vx, e_vx), (r_sy * r_vy), aerr_ulp_dp_mul(r_sy, e_sy, r_vy, e_vy))), ((r_vx * r_vx) + (r_vy * r_vy)), aerr_ulp_dp_add((r_vx * r_vx), aerr_ulp_dp_mul(r_vx, e_vx, r_vx, e_vx), (r_vy * r_vy), aerr_ulp_dp_mul(r_vy, e_vy, r_vy, e_vy))), (0 / 1))


%|- tcpa_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: -1, Ddiv(Dsub(Dmul(DTHR, DTHR), Dadd(Dmul(sx, sx), Dmul(sy, sy))), Dadd(Dmul(sx, vx), Dmul(sy, vy)))
% Control Flow: Stable
taumod_fp_0 : LEMMA
FORALL(e_sx, e_vx, e_sy, e_vy, e_DTHR: nonneg_real, r_sx, r_vx, r_sy, r_vy, r_DTHR: real, sx: double, vx: double, sy: double, vy: double, DTHR: double):
finite?(sx) AND finite?(vx) AND finite?(sy) AND finite?(vy) AND finite?(DTHR) AND finite?(Dadd(Dmul(sx, vx), Dmul(sy, vy))) AND finite?(ItoD(0)) AND
abs(DtoR(sx) - r_sx)<=e_sx AND abs(DtoR(vx) - r_vx)<=e_vx AND abs(DtoR(sy) - r_sy)<=e_sy AND abs(DtoR(vy) - r_vy)<=e_vy AND abs(DtoR(DTHR) - r_DTHR)<=e_DTHR
AND (((NOT((((r_sx * r_vx) + (r_sy * r_vy)) < 0)) AND TRUE) AND (NOT((Dadd(Dmul(sx, vx), Dmul(sy, vy)) < ItoD(0))) AND TRUE)) OR (((((r_sx * r_vx) + (r_sy * r_vy)) < 0) AND (((r_sx * r_vx) + (r_sy * r_vy)) /= 0)) AND ((Dadd(Dmul(sx, vx), Dmul(sy, vy)) < ItoD(0)) AND (Dadd(Dmul(sx, vx), Dmul(sy, vy)) /= ItoD(0)))))
IMPLIES
abs(DtoR(taumod_fp(sx, vx, sy, vy, DTHR)) - taumod(r_sx, r_vx, r_sy, r_vy, r_DTHR))<=max(aerr_ulp_dp_div(((r_DTHR * r_DTHR) - ((r_sx * r_sx) + (r_sy * r_sy))), aerr_ulp_dp_sub((r_DTHR * r_DTHR), aerr_ulp_dp_mul(r_DTHR, e_DTHR, r_DTHR, e_DTHR), ((r_sx * r_sx) + (r_sy * r_sy)), aerr_ulp_dp_add((r_sx * r_sx), aerr_ulp_dp_mul(r_sx, e_sx, r_sx, e_sx), (r_sy * r_sy), aerr_ulp_dp_mul(r_sy, e_sy, r_sy, e_sy))), ((r_sx * r_vx) + (r_sy * r_vy)), aerr_ulp_dp_add((r_sx * r_vx), aerr_ulp_dp_mul(r_sx, e_sx, r_vx, e_vx), (r_sy * r_vy), aerr_ulp_dp_mul(r_sy, e_sy, r_vy, e_vy))), (0 / 1))


%|- taumod_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: -1, 1
% Control Flow: Stable
sign_fp_0 : LEMMA
FORALL(e_x: nonneg_real, r_x: real, x: double):
finite?(x) AND finite?(x) AND finite?(ItoD(0)) AND
abs(DtoR(x) - r_x)<=e_x
AND (((NOT((r_x >= 0)) AND TRUE) AND (NOT((x >= ItoD(0))) AND TRUE)) OR (((r_x >= 0) AND TRUE) AND ((x >= ItoD(0)) AND TRUE)))
IMPLIES
abs(sign_fp(x) - sign(r_x))<=max((0 / 1), (0 / 1))


%|- sign_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: a, b
% Control Flow: Stable
max__fp_0 : LEMMA
FORALL(e_a, e_b: nonneg_real, r_a, r_b: real, a: double, b: double):
finite?(a) AND finite?(b) AND finite?(Dsub(a, b)) AND finite?(ItoD(0)) AND
abs(DtoR(a) - r_a)<=e_a AND abs(DtoR(b) - r_b)<=e_b
AND (((NOT(((r_a - r_b) < 0)) AND TRUE) AND (NOT((Dsub(a, b) < ItoD(0))) AND TRUE)) OR ((((r_a - r_b) < 0) AND TRUE) AND ((Dsub(a, b) < ItoD(0)) AND TRUE)))
IMPLIES
abs(DtoR(max__fp(a, b)) - max_(r_a, r_b))<=max(e_b, e_a)


%|- max__fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: a, b
% Control Flow: Stable
min__fp_0 : LEMMA
FORALL(e_a, e_b: nonneg_real, r_a, r_b: real, a: double, b: double):
finite?(a) AND finite?(b) AND finite?(Dsub(a, b)) AND finite?(ItoD(0)) AND
abs(DtoR(a) - r_a)<=e_a AND abs(DtoR(b) - r_b)<=e_b
AND (((NOT(((r_a - r_b) > 0)) AND TRUE) AND (NOT((Dsub(a, b) > ItoD(0))) AND TRUE)) OR ((((r_a - r_b) > 0) AND TRUE) AND ((Dsub(a, b) > ItoD(0)) AND TRUE)))
IMPLIES
abs(DtoR(min__fp(a, b)) - min_(r_a, r_b))<=max(e_b, e_a)


%|- min__fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: Dsub(Dmul(b, b), Dmul(Dmul(4, a), c))
% Control Flow: Stable
discr_fp_0 : LEMMA
FORALL(e_a, e_b, e_c: nonneg_real, r_a, r_b, r_c: real, a: double, b: double, c: double):
finite?(a) AND finite?(b) AND finite?(c) AND
abs(DtoR(a) - r_a)<=e_a AND abs(DtoR(b) - r_b)<=e_b AND abs(DtoR(c) - r_c)<=e_c
IMPLIES
abs(DtoR(discr_fp(a, b, c)) - discr(r_a, r_b, r_c))<=aerr_ulp_dp_sub((r_b * r_b), aerr_ulp_dp_mul(r_b, e_b, r_b, e_b), ((4 * r_a) * r_c), aerr_ulp_dp_mul((4 * r_a), aerr_ulp_dp_mul(4, (0 / 1), r_a, e_a), r_c, e_c))


%|- discr_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: 0, Ddiv(Dadd(Dneg(b), Dsqrt(Dabs(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c))))), Dmul(2, a))
% Control Flow: Stable
root_pos_fp_0 : LEMMA
FORALL(e_a, e_b, e_c: nonneg_real, r_a, r_b, r_c: real, a: double, b: double, c: double):
finite?(a) AND finite?(b) AND finite?(c) AND finite?(Dsub(Dmul(b, b), Dmul(Dmul(ItoD(4), a), c))) AND finite?(ItoD(0)) AND finite?(a) AND finite?(ItoD(0)) AND
abs(DtoR(a) - r_a)<=e_a AND abs(DtoR(b) - r_b)<=e_b AND abs(DtoR(c) - r_c)<=e_c
AND (((((((r_b * r_b) - ((4 * r_a) * r_c)) >= 0) AND (r_a /= 0)) AND (((abs(((r_b * r_b) - ((4 * r_a) * r_c))) - aerr_ulp_dp_abs(((r_b * r_b) - ((4 * r_a) * r_c)), aerr_ulp_dp_sub((r_b * r_b), aerr_ulp_dp_mul(r_b, e_b, r_b, e_b), ((4 * r_a) * r_c), aerr_ulp_dp_mul((4 * r_a), aerr_ulp_dp_mul(4, (0 / 1), r_a, e_a), r_c, e_c)))) >= 0) AND ((2 * r_a) /= 0))) AND (((Dsub(Dmul(b, b), Dmul(Dmul(ItoD(4), a), c)) >= ItoD(0)) AND (a /= ItoD(0))) AND (Dmul(2, a) /= ItoD(0)))) OR ((NOT(((((r_b * r_b) - ((4 * r_a) * r_c)) >= 0) AND (r_a /= 0))) AND TRUE) AND (NOT(((Dsub(Dmul(b, b), Dmul(Dmul(ItoD(4), a), c)) >= ItoD(0)) AND (a /= ItoD(0)))) AND TRUE)))
IMPLIES
abs(DtoR(root_pos_fp(a, b, c)) - root_pos(r_a, r_b, r_c))<=max(aerr_ulp_dp_div((-(r_b) + sqrt_safe(abs(((r_b * r_b) - ((4 * r_a) * r_c))))), aerr_ulp_dp_add(-(r_b), aerr_ulp_dp_neg(r_b, e_b), sqrt_safe(abs(((r_b * r_b) - ((4 * r_a) * r_c)))), aerr_ulp_dp_sqt(abs(((r_b * r_b) - ((4 * r_a) * r_c))), aerr_ulp_dp_abs(((r_b * r_b) - ((4 * r_a) * r_c)), aerr_ulp_dp_sub((r_b * r_b), aerr_ulp_dp_mul(r_b, e_b, r_b, e_b), ((4 * r_a) * r_c), aerr_ulp_dp_mul((4 * r_a), aerr_ulp_dp_mul(4, (0 / 1), r_a, e_a), r_c, e_c))))), (2 * r_a), aerr_ulp_dp_mul(2, (0 / 1), r_a, e_a)), (0 / 1))


%|- root_pos_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: 0, Ddiv(Dsub(Dneg(b), Dsqrt(Dabs(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c))))), Dmul(2, a))
% Control Flow: Stable
root_neg_fp_0 : LEMMA
FORALL(e_a, e_b, e_c: nonneg_real, r_a, r_b, r_c: real, a: double, b: double, c: double):
finite?(a) AND finite?(b) AND finite?(c) AND finite?(Dsub(Dmul(b, b), Dmul(Dmul(ItoD(4), a), c))) AND finite?(ItoD(0)) AND finite?(a) AND finite?(ItoD(0)) AND
abs(DtoR(a) - r_a)<=e_a AND abs(DtoR(b) - r_b)<=e_b AND abs(DtoR(c) - r_c)<=e_c
AND (((((((r_b * r_b) - ((4 * r_a) * r_c)) >= 0) AND (r_a /= 0)) AND (((abs(((r_b * r_b) - ((4 * r_a) * r_c))) - aerr_ulp_dp_abs(((r_b * r_b) - ((4 * r_a) * r_c)), aerr_ulp_dp_sub((r_b * r_b), aerr_ulp_dp_mul(r_b, e_b, r_b, e_b), ((4 * r_a) * r_c), aerr_ulp_dp_mul((4 * r_a), aerr_ulp_dp_mul(4, (0 / 1), r_a, e_a), r_c, e_c)))) >= 0) AND ((2 * r_a) /= 0))) AND (((Dsub(Dmul(b, b), Dmul(Dmul(ItoD(4), a), c)) >= ItoD(0)) AND (a /= ItoD(0))) AND (Dmul(2, a) /= ItoD(0)))) OR ((NOT(((((r_b * r_b) - ((4 * r_a) * r_c)) >= 0) AND (r_a /= 0))) AND TRUE) AND (NOT(((Dsub(Dmul(b, b), Dmul(Dmul(ItoD(4), a), c)) >= ItoD(0)) AND (a /= ItoD(0)))) AND TRUE)))
IMPLIES
abs(DtoR(root_neg_fp(a, b, c)) - root_neg(r_a, r_b, r_c))<=max(aerr_ulp_dp_div((-(r_b) - sqrt_safe(abs(((r_b * r_b) - ((4 * r_a) * r_c))))), aerr_ulp_dp_sub(-(r_b), aerr_ulp_dp_neg(r_b, e_b), sqrt_safe(abs(((r_b * r_b) - ((4 * r_a) * r_c)))), aerr_ulp_dp_sqt(abs(((r_b * r_b) - ((4 * r_a) * r_c))), aerr_ulp_dp_abs(((r_b * r_b) - ((4 * r_a) * r_c)), aerr_ulp_dp_sub((r_b * r_b), aerr_ulp_dp_mul(r_b, e_b, r_b, e_b), ((4 * r_a) * r_c), aerr_ulp_dp_mul((4 * r_a), aerr_ulp_dp_mul(4, (0 / 1), r_a, e_a), r_c, e_c))))), (2 * r_a), aerr_ulp_dp_mul(2, (0 / 1), r_a, e_a)), (0 / 1))


%|- root_neg_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: Dadd(Dmul(sx, vx), Dmul(sy, vy))
% Control Flow: Stable
inner_product_fp_0 : LEMMA
FORALL(e_sx, e_sy, e_vx, e_vy: nonneg_real, r_sx, r_sy, r_vx, r_vy: real, sx: double, sy: double, vx: double, vy: double):
finite?(sx) AND finite?(sy) AND finite?(vx) AND finite?(vy) AND
abs(DtoR(sx) - r_sx)<=e_sx AND abs(DtoR(sy) - r_sy)<=e_sy AND abs(DtoR(vx) - r_vx)<=e_vx AND abs(DtoR(vy) - r_vy)<=e_vy
IMPLIES
abs(DtoR(inner_product_fp(sx, sy, vx, vy)) - inner_product(r_sx, r_sy, r_vx, r_vy))<=aerr_ulp_dp_add((r_sx * r_vx), aerr_ulp_dp_mul(r_sx, e_sx, r_vx, e_vx), (r_sy * r_vy), aerr_ulp_dp_mul(r_sy, e_sy, r_vy, e_vy))


%|- inner_product_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: Dsub(Dmul(sx, vy), Dmul(sy, vx))
% Control Flow: Stable
cross_product_fp_0 : LEMMA
FORALL(e_sx, e_sy, e_vx, e_vy: nonneg_real, r_sx, r_sy, r_vx, r_vy: real, sx: double, sy: double, vx: double, vy: double):
finite?(sx) AND finite?(sy) AND finite?(vx) AND finite?(vy) AND
abs(DtoR(sx) - r_sx)<=e_sx AND abs(DtoR(sy) - r_sy)<=e_sy AND abs(DtoR(vx) - r_vx)<=e_vx AND abs(DtoR(vy) - r_vy)<=e_vy
IMPLIES
abs(DtoR(cross_product_fp(sx, sy, vx, vy)) - cross_product(r_sx, r_sy, r_vx, r_vy))<=aerr_ulp_dp_sub((r_sx * r_vy), aerr_ulp_dp_mul(r_sx, e_sx, r_vy, e_vy), (r_sy * r_vx), aerr_ulp_dp_mul(r_sy, e_sy, r_vx, e_vx))


%|- cross_product_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: Dadd(Dmul(sx, vx), Dmul(sy, vy))
% Control Flow: Stable
sq_fp_0 : LEMMA
FORALL(e_sx, e_sy: nonneg_real, r_sx, r_sy: real, sx: double, sy: double):
finite?(sx) AND finite?(sy) AND
abs(DtoR(sx) - r_sx)<=e_sx AND abs(DtoR(sy) - r_sy)<=e_sy
IMPLIES
abs(DtoR(sq_fp(sx, sy)) - sq(r_sx, r_sy))<=aerr_ulp_dp_add((r_sx * r_sx), aerr_ulp_dp_mul(r_sx, e_sx, r_sx, e_sx), (r_sy * r_sy), aerr_ulp_dp_mul(r_sy, e_sy, r_sy, e_sy))


%|- sq_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: Dadd(sx, Dmul(vx, t))
% Control Flow: Stable
proj_fp_0 : LEMMA
FORALL(e_sx, e_vx, e_t: nonneg_real, r_sx, r_vx, r_t: real, sx: double, vx: double, t: double):
finite?(sx) AND finite?(vx) AND finite?(t) AND
abs(DtoR(sx) - r_sx)<=e_sx AND abs(DtoR(vx) - r_vx)<=e_vx AND abs(DtoR(t) - r_t)<=e_t
IMPLIES
abs(DtoR(proj_fp(sx, vx, t)) - proj(r_sx, r_vx, r_t))<=aerr_ulp_dp_add(r_sx, e_sx, (r_vx * r_t), aerr_ulp_dp_mul(r_vx, e_vx, r_t, e_t))


%|- proj_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: Dsub(Dmul(Dmul(D, D), Dadd(Dmul(sx, vx), Dmul(sy, vy))), Dmul(Dsub(Dmul(sx, vy), Dmul(sy, vx)), Dsub(Dmul(sx, vy), Dmul(sy, vx))))
% Control Flow: Stable
Delta_fp_0 : LEMMA
FORALL(e_sx, e_sy, e_vx, e_vy, e_D: nonneg_real, r_sx, r_sy, r_vx, r_vy, r_D: real, sx: double, sy: double, vx: double, vy: double, D: double):
finite?(sx) AND finite?(sy) AND finite?(vx) AND finite?(vy) AND finite?(D) AND
abs(DtoR(sx) - r_sx)<=e_sx AND abs(DtoR(sy) - r_sy)<=e_sy AND abs(DtoR(vx) - r_vx)<=e_vx AND abs(DtoR(vy) - r_vy)<=e_vy AND abs(DtoR(D) - r_D)<=e_D
IMPLIES
abs(DtoR(Delta_fp(sx, sy, vx, vy, D)) - Delta(r_sx, r_sy, r_vx, r_vy, r_D))<=aerr_ulp_dp_sub(((r_D * r_D) * ((r_vx * r_vx) + (r_vy * r_vy))), aerr_ulp_dp_mul((r_D * r_D), aerr_ulp_dp_mul(r_D, e_D, r_D, e_D), ((r_vx * r_vx) + (r_vy * r_vy)), aerr_ulp_dp_add((r_vx * r_vx), aerr_ulp_dp_mul(r_vx, e_vx, r_vx, e_vx), (r_vy * r_vy), aerr_ulp_dp_mul(r_vy, e_vy, r_vy, e_vy))), (((r_sx * r_vy) - (r_sy * r_vx)) * ((r_sx * r_vy) - (r_sy * r_vx))), aerr_ulp_dp_mul(((r_sx * r_vy) - (r_sy * r_vx)), aerr_ulp_dp_sub((r_sx * r_vy), aerr_ulp_dp_mul(r_sx, e_sx, r_vy, e_vy), (r_sy * r_vx), aerr_ulp_dp_mul(r_sy, e_sy, r_vx, e_vx)), ((r_sx * r_vy) - (r_sy * r_vx)), aerr_ulp_dp_sub((r_sx * r_vy), aerr_ulp_dp_mul(r_sx, e_sx, r_vy, e_vy), (r_sy * r_vx), aerr_ulp_dp_mul(r_sy, e_sy, r_vx, e_vx))))


%|- Delta_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: LET a:double=sq_fp(vx, vy)
                         IN LET b:double=inner_product_fp(sx, sy, vx, vy)
                            IN LET c:double=Dsub(sq_fp(sx, sy), Dmul(D, D))
                               IN 0, LET a:double=sq_fp(vx, vy)
                                     IN LET b:double=inner_product_fp(sx, sy, vx, vy)
                                        IN LET c:double=Dsub(sq_fp(sx, sy), Dmul(D, D))
                                           IN Ddiv(Dadd(Dneg(b), Dsqrt(Dabs(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c))))), Dmul(2, a))
% Control Flow: Stable
Theta_D_pos_fp_0 : LEMMA
FORALL(e_D, e_sx, e_sy, e_vx, e_vy: nonneg_real, r_D, r_sx, r_sy, r_vx, r_vy: real, D: double, sx: double, sy: double, vx: double, vy: double):
finite?(D) AND finite?(sx) AND finite?(sy) AND finite?(vx) AND finite?(vy) AND
abs(DtoR(D) - r_D)<=e_D AND abs(DtoR(sx) - r_sx)<=e_sx AND abs(DtoR(sy) - r_sy)<=e_sy AND abs(DtoR(vx) - r_vx)<=e_vx AND abs(DtoR(vy) - r_vy)<=e_vy
AND ((((((((2 * inner_product(r_sx, r_sy, r_vx, r_vy)) * (2 * inner_product(r_sx, r_sy, r_vx, r_vy))) - ((4 * sq(r_vx, r_vy)) * (sq(r_sx, r_sy) - (r_D * r_D)))) >= 0) AND (sq(r_vx, r_vy) /= 0)) AND (((abs((((2 * inner_product(r_sx, r_sy, r_vx, r_vy)) * (2 * inner_product(r_sx, r_sy, r_vx, r_vy))) - ((4 * sq(r_vx, r_vy)) * (sq(r_sx, r_sy) - (r_D * r_D))))) - aerr_ulp_dp_abs((((2 * inner_product(r_sx, r_sy, r_vx, r_vy)) * (2 * inner_product(r_sx, r_sy, r_vx, r_vy))) - ((4 * sq(r_vx, r_vy)) * (sq(r_sx, r_sy) - (r_D * r_D)))), aerr_ulp_dp_sub(((2 * inner_product(r_sx, r_sy, r_vx, r_vy)) * (2 * inner_product(r_sx, r_sy, r_vx, r_vy))), aerr_ulp_dp_mul((2 * inner_product(r_sx, r_sy, r_vx, r_vy)), aerr_ulp_dp_mul(2, (0 / 1), inner_product(r_sx, r_sy, r_vx, r_vy), aerr_ulp_dp_add((r_sx * r_vx), aerr_ulp_dp_mul(r_sx, e_sx, r_vx, e_vx), (r_sy * r_vy), aerr_ulp_dp_mul(r_sy, e_sy, r_vy, e_vy))), (2 * inner_product(r_sx, r_sy, r_vx, r_vy)), aerr_ulp_dp_mul(2, (0 / 1), inner_product(r_sx, r_sy, r_vx, r_vy), aerr_ulp_dp_add((r_sx * r_vx), aerr_ulp_dp_mul(r_sx, e_sx, r_vx, e_vx), (r_sy * r_vy), aerr_ulp_dp_mul(r_sy, e_sy, r_vy, e_vy)))), ((4 * sq(r_vx, r_vy)) * (sq(r_sx, r_sy) - (r_D * r_D))), aerr_ulp_dp_mul((4 * sq(r_vx, r_vy)), aerr_ulp_dp_mul(4, (0 / 1), sq(r_vx, r_vy), aerr_ulp_dp_add((r_vx * r_vx), aerr_ulp_dp_mul(r_vx, e_vx, r_vx, e_vx), (r_vy * r_vy), aerr_ulp_dp_mul(r_vy, e_vy, r_vy, e_vy))), (sq(r_sx, r_sy) - (r_D * r_D)), aerr_ulp_dp_sub(((r_sx * r_sx) + (r_sy * r_sy)), aerr_ulp_dp_add((r_sx * r_sx), aerr_ulp_dp_mul(r_sx, e_sx, r_sx, e_sx), (r_sy * r_sy), aerr_ulp_dp_mul(r_sy, e_sy, r_sy, e_sy)), (r_D * r_D), aerr_ulp_dp_mul(r_D, e_D, r_D, e_D)))))) >= 0) AND ((2 * sq(r_vx, r_vy)) /= 0))) AND (((Dsub(Dmul(Dmul(ItoD(2), inner_product_fp(sx, sy, vx, vy)), Dmul(ItoD(2), inner_product_fp(sx, sy, vx, vy))), Dmul(Dmul(ItoD(4), sq_fp(vx, vy)), Dsub(sq_fp(sx, sy), Dmul(D, D)))) >= ItoD(0)) AND (sq_fp(vx, vy) /= ItoD(0))) AND (Dmul(2, sq_fp(vx, vy)) /= ItoD(0)))) OR ((NOT((((((2 * inner_product(r_sx, r_sy, r_vx, r_vy)) * (2 * inner_product(r_sx, r_sy, r_vx, r_vy))) - ((4 * sq(r_vx, r_vy)) * (sq(r_sx, r_sy) - (r_D * r_D)))) >= 0) AND (sq(r_vx, r_vy) /= 0))) AND TRUE) AND (NOT(((Dsub(Dmul(Dmul(ItoD(2), inner_product_fp(sx, sy, vx, vy)), Dmul(ItoD(2), inner_product_fp(sx, sy, vx, vy))), Dmul(Dmul(ItoD(4), sq_fp(vx, vy)), Dsub(sq_fp(sx, sy), Dmul(D, D)))) >= ItoD(0)) AND (sq_fp(vx, vy) /= ItoD(0)))) AND TRUE)))
IMPLIES
abs(DtoR(Theta_D_pos_fp(D, sx, sy, vx, vy)) - Theta_D_pos(r_D, r_sx, r_sy, r_vx, r_vy))<=LET a:real=((r_vx * r_vx) + (r_vy * r_vy)),
                                                                                             Err_a:real=aerr_ulp_dp_add((r_vx * r_vx), aerr_ulp_dp_mul(r_vx, e_vx, r_vx, e_vx), (r_vy * r_vy), aerr_ulp_dp_mul(r_vy, e_vy, r_vy, e_vy))
                                                                                         IN LET b:real=((r_sx * r_vx) + (r_sy * r_vy)),
                                                                                                Err_b:real=aerr_ulp_dp_add((r_sx * r_vx), aerr_ulp_dp_mul(r_sx, e_sx, r_vx, e_vx), (r_sy * r_vy), aerr_ulp_dp_mul(r_sy, e_sy, r_vy, e_vy))
                                                                                            IN LET c:real=(((r_sx * r_sx) + (r_sy * r_sy)) - (r_D * r_D)),
                                                                                                   Err_c:real=aerr_ulp_dp_sub(((r_sx * r_sx) + (r_sy * r_sy)), aerr_ulp_dp_add((r_sx * r_sx), aerr_ulp_dp_mul(r_sx, e_sx, r_sx, e_sx), (r_sy * r_sy), aerr_ulp_dp_mul(r_sy, e_sy, r_sy, e_sy)), (r_D * r_D), aerr_ulp_dp_mul(r_D, e_D, r_D, e_D))
                                                                                               IN max(aerr_ulp_dp_div((-((2 * r_b)) + sqrt_safe(abs((((2 * r_b) * (2 * r_b)) - ((4 * r_a) * r_c))))), aerr_ulp_dp_add(-((2 * r_b)), aerr_ulp_dp_neg((2 * r_b), aerr_ulp_dp_mul(2, (0 / 1), r_b, Err_b)), sqrt_safe(abs((((2 * r_b) * (2 * r_b)) - ((4 * r_a) * r_c)))), aerr_ulp_dp_sqt(abs((((2 * r_b) * (2 * r_b)) - ((4 * r_a) * r_c))), aerr_ulp_dp_abs((((2 * r_b) * (2 * r_b)) - ((4 * r_a) * r_c)), aerr_ulp_dp_sub(((2 * r_b) * (2 * r_b)), aerr_ulp_dp_mul((2 * r_b), aerr_ulp_dp_mul(2, (0 / 1), r_b, Err_b), (2 * r_b), aerr_ulp_dp_mul(2, (0 / 1), r_b, Err_b)), ((4 * r_a) * r_c), aerr_ulp_dp_mul((4 * r_a), aerr_ulp_dp_mul(4, (0 / 1), r_a, Err_a), r_c, Err_c))))), (2 * r_a), aerr_ulp_dp_mul(2, (0 / 1), r_a, Err_a)), (0 / 1))


%|- Theta_D_pos_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: LET a:double=sq_fp(vx, vy)
                         IN LET b:double=inner_product_fp(sx, sy, vx, vy)
                            IN LET c:double=Dsub(sq_fp(sx, sy), Dmul(D, D))
                               IN 0, LET a:double=sq_fp(vx, vy)
                                     IN LET b:double=inner_product_fp(sx, sy, vx, vy)
                                        IN LET c:double=Dsub(sq_fp(sx, sy), Dmul(D, D))
                                           IN Ddiv(Dsub(Dneg(b), Dsqrt(Dabs(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c))))), Dmul(2, a))
% Control Flow: Stable
Theta_D_neg_fp_0 : LEMMA
FORALL(e_D, e_sx, e_sy, e_vx, e_vy: nonneg_real, r_D, r_sx, r_sy, r_vx, r_vy: real, D: double, sx: double, sy: double, vx: double, vy: double):
finite?(D) AND finite?(sx) AND finite?(sy) AND finite?(vx) AND finite?(vy) AND
abs(DtoR(D) - r_D)<=e_D AND abs(DtoR(sx) - r_sx)<=e_sx AND abs(DtoR(sy) - r_sy)<=e_sy AND abs(DtoR(vx) - r_vx)<=e_vx AND abs(DtoR(vy) - r_vy)<=e_vy
AND ((((((((2 * inner_product(r_sx, r_sy, r_vx, r_vy)) * (2 * inner_product(r_sx, r_sy, r_vx, r_vy))) - ((4 * sq(r_vx, r_vy)) * (sq(r_sx, r_sy) - (r_D * r_D)))) >= 0) AND (sq(r_vx, r_vy) /= 0)) AND (((abs((((2 * inner_product(r_sx, r_sy, r_vx, r_vy)) * (2 * inner_product(r_sx, r_sy, r_vx, r_vy))) - ((4 * sq(r_vx, r_vy)) * (sq(r_sx, r_sy) - (r_D * r_D))))) - aerr_ulp_dp_abs((((2 * inner_product(r_sx, r_sy, r_vx, r_vy)) * (2 * inner_product(r_sx, r_sy, r_vx, r_vy))) - ((4 * sq(r_vx, r_vy)) * (sq(r_sx, r_sy) - (r_D * r_D)))), aerr_ulp_dp_sub(((2 * inner_product(r_sx, r_sy, r_vx, r_vy)) * (2 * inner_product(r_sx, r_sy, r_vx, r_vy))), aerr_ulp_dp_mul((2 * inner_product(r_sx, r_sy, r_vx, r_vy)), aerr_ulp_dp_mul(2, (0 / 1), inner_product(r_sx, r_sy, r_vx, r_vy), aerr_ulp_dp_add((r_sx * r_vx), aerr_ulp_dp_mul(r_sx, e_sx, r_vx, e_vx), (r_sy * r_vy), aerr_ulp_dp_mul(r_sy, e_sy, r_vy, e_vy))), (2 * inner_product(r_sx, r_sy, r_vx, r_vy)), aerr_ulp_dp_mul(2, (0 / 1), inner_product(r_sx, r_sy, r_vx, r_vy), aerr_ulp_dp_add((r_sx * r_vx), aerr_ulp_dp_mul(r_sx, e_sx, r_vx, e_vx), (r_sy * r_vy), aerr_ulp_dp_mul(r_sy, e_sy, r_vy, e_vy)))), ((4 * sq(r_vx, r_vy)) * (sq(r_sx, r_sy) - (r_D * r_D))), aerr_ulp_dp_mul((4 * sq(r_vx, r_vy)), aerr_ulp_dp_mul(4, (0 / 1), sq(r_vx, r_vy), aerr_ulp_dp_add((r_vx * r_vx), aerr_ulp_dp_mul(r_vx, e_vx, r_vx, e_vx), (r_vy * r_vy), aerr_ulp_dp_mul(r_vy, e_vy, r_vy, e_vy))), (sq(r_sx, r_sy) - (r_D * r_D)), aerr_ulp_dp_sub(((r_sx * r_sx) + (r_sy * r_sy)), aerr_ulp_dp_add((r_sx * r_sx), aerr_ulp_dp_mul(r_sx, e_sx, r_sx, e_sx), (r_sy * r_sy), aerr_ulp_dp_mul(r_sy, e_sy, r_sy, e_sy)), (r_D * r_D), aerr_ulp_dp_mul(r_D, e_D, r_D, e_D)))))) >= 0) AND ((2 * sq(r_vx, r_vy)) /= 0))) AND (((Dsub(Dmul(Dmul(ItoD(2), inner_product_fp(sx, sy, vx, vy)), Dmul(ItoD(2), inner_product_fp(sx, sy, vx, vy))), Dmul(Dmul(ItoD(4), sq_fp(vx, vy)), Dsub(sq_fp(sx, sy), Dmul(D, D)))) >= ItoD(0)) AND (sq_fp(vx, vy) /= ItoD(0))) AND (Dmul(2, sq_fp(vx, vy)) /= ItoD(0)))) OR ((NOT((((((2 * inner_product(r_sx, r_sy, r_vx, r_vy)) * (2 * inner_product(r_sx, r_sy, r_vx, r_vy))) - ((4 * sq(r_vx, r_vy)) * (sq(r_sx, r_sy) - (r_D * r_D)))) >= 0) AND (sq(r_vx, r_vy) /= 0))) AND TRUE) AND (NOT(((Dsub(Dmul(Dmul(ItoD(2), inner_product_fp(sx, sy, vx, vy)), Dmul(ItoD(2), inner_product_fp(sx, sy, vx, vy))), Dmul(Dmul(ItoD(4), sq_fp(vx, vy)), Dsub(sq_fp(sx, sy), Dmul(D, D)))) >= ItoD(0)) AND (sq_fp(vx, vy) /= ItoD(0)))) AND TRUE)))
IMPLIES
abs(DtoR(Theta_D_neg_fp(D, sx, sy, vx, vy)) - Theta_D_neg(r_D, r_sx, r_sy, r_vx, r_vy))<=LET a:real=((r_vx * r_vx) + (r_vy * r_vy)),
                                                                                             Err_a:real=aerr_ulp_dp_add((r_vx * r_vx), aerr_ulp_dp_mul(r_vx, e_vx, r_vx, e_vx), (r_vy * r_vy), aerr_ulp_dp_mul(r_vy, e_vy, r_vy, e_vy))
                                                                                         IN LET b:real=((r_sx * r_vx) + (r_sy * r_vy)),
                                                                                                Err_b:real=aerr_ulp_dp_add((r_sx * r_vx), aerr_ulp_dp_mul(r_sx, e_sx, r_vx, e_vx), (r_sy * r_vy), aerr_ulp_dp_mul(r_sy, e_sy, r_vy, e_vy))
                                                                                            IN LET c:real=(((r_sx * r_sx) + (r_sy * r_sy)) - (r_D * r_D)),
                                                                                                   Err_c:real=aerr_ulp_dp_sub(((r_sx * r_sx) + (r_sy * r_sy)), aerr_ulp_dp_add((r_sx * r_sx), aerr_ulp_dp_mul(r_sx, e_sx, r_sx, e_sx), (r_sy * r_sy), aerr_ulp_dp_mul(r_sy, e_sy, r_sy, e_sy)), (r_D * r_D), aerr_ulp_dp_mul(r_D, e_D, r_D, e_D))
                                                                                               IN max(aerr_ulp_dp_div((-((2 * r_b)) - sqrt_safe(abs((((2 * r_b) * (2 * r_b)) - ((4 * r_a) * r_c))))), aerr_ulp_dp_sub(-((2 * r_b)), aerr_ulp_dp_neg((2 * r_b), aerr_ulp_dp_mul(2, (0 / 1), r_b, Err_b)), sqrt_safe(abs((((2 * r_b) * (2 * r_b)) - ((4 * r_a) * r_c)))), aerr_ulp_dp_sqt(abs((((2 * r_b) * (2 * r_b)) - ((4 * r_a) * r_c))), aerr_ulp_dp_abs((((2 * r_b) * (2 * r_b)) - ((4 * r_a) * r_c)), aerr_ulp_dp_sub(((2 * r_b) * (2 * r_b)), aerr_ulp_dp_mul((2 * r_b), aerr_ulp_dp_mul(2, (0 / 1), r_b, Err_b), (2 * r_b), aerr_ulp_dp_mul(2, (0 / 1), r_b, Err_b)), ((4 * r_a) * r_c), aerr_ulp_dp_mul((4 * r_a), aerr_ulp_dp_mul(4, (0 / 1), r_a, Err_a), r_c, Err_c))))), (2 * r_a), aerr_ulp_dp_mul(2, (0 / 1), r_a, Err_a)), (0 / 1))


%|- Theta_D_neg_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: Ddiv(Dsub(Dmul(ItoD(-1), H), sz), nzvz), Ddiv(Dsub(Dmul(ItoD(1), H), sz), nzvz)
% Control Flow: Stable
Theta_H_pos_fp_0 : LEMMA
FORALL(e_sz, e_nzvz, e_H: nonneg_real, r_sz, r_nzvz, r_H: real, sz: double, nzvz: double, H: double):
finite?(sz) AND finite?(nzvz) AND finite?(H) AND
abs(DtoR(sz) - r_sz)<=e_sz AND abs(DtoR(nzvz) - r_nzvz)<=e_nzvz AND abs(DtoR(H) - r_H)<=e_H
AND (((NOT((r_nzvz >= 0)) AND (r_nzvz /= 0)) AND (NOT((nzvz >= ItoD(0))) AND (nzvz /= ItoD(0)))) OR (((r_nzvz >= 0) AND (r_nzvz /= 0)) AND ((nzvz >= ItoD(0)) AND (nzvz /= ItoD(0)))))
IMPLIES
abs(DtoR(Theta_H_pos_fp(sz, nzvz, H)) - Theta_H_pos(r_sz, r_nzvz, r_H))<=max(aerr_ulp_dp_div(((-1 * r_H) - r_sz), max(aerr_ulp_dp_sub((-1 * r_H), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_H, e_H), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_H, e_H)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_H), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_H, e_H), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_H, e_H)), r_sz, e_sz)), r_nzvz, e_nzvz), aerr_ulp_dp_div(((1 * r_H) - r_sz), max(aerr_ulp_dp_sub((-1 * r_H), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_H, e_H), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_H, e_H)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_H), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_H, e_H), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_H, e_H)), r_sz, e_sz)), r_nzvz, e_nzvz))


%|- Theta_H_pos_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: Ddiv(Dsub(Dmul(ItoD(--1), H), sz), nzvz), Ddiv(Dsub(Dmul(ItoD(-1), H), sz), nzvz)
% Control Flow: Stable
Theta_H_neg_fp_0 : LEMMA
FORALL(e_sz, e_nzvz, e_H: nonneg_real, r_sz, r_nzvz, r_H: real, sz: double, nzvz: double, H: double):
finite?(sz) AND finite?(nzvz) AND finite?(H) AND
abs(DtoR(sz) - r_sz)<=e_sz AND abs(DtoR(nzvz) - r_nzvz)<=e_nzvz AND abs(DtoR(H) - r_H)<=e_H
AND (((NOT((r_nzvz >= 0)) AND (r_nzvz /= 0)) AND (NOT((nzvz >= ItoD(0))) AND (nzvz /= ItoD(0)))) OR (((r_nzvz >= 0) AND (r_nzvz /= 0)) AND ((nzvz >= ItoD(0)) AND (nzvz /= ItoD(0)))))
IMPLIES
abs(DtoR(Theta_H_neg_fp(sz, nzvz, H)) - Theta_H_neg(r_sz, r_nzvz, r_H))<=max(aerr_ulp_dp_div(((--1 * r_H) - r_sz), max(aerr_ulp_dp_sub((--1 * r_H), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_H, e_H), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_H, e_H)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_H), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_H, e_H), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_H, e_H)), r_sz, e_sz)), r_nzvz, e_nzvz), aerr_ulp_dp_div(((-1 * r_H) - r_sz), max(aerr_ulp_dp_sub((--1 * r_H), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_H, e_H), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_H, e_H)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_H), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_H, e_H), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_H, e_H)), r_sz, e_sz)), r_nzvz, e_nzvz))


%|- Theta_H_neg_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: LET Z_COA:double=Dmul(Dabs(nzvz), TCOA)
                         IN Ddiv(Dsub(Dmul(ItoD(--1), H), sz), nzvz), LET Z_COA:double=Dmul(Dabs(nzvz), TCOA)
                                                                      IN Ddiv(Dsub(Dmul(ItoD(-1), H), sz), nzvz)
% Control Flow: Stable
coalt_entry_fp_0 : LEMMA
FORALL(e_sz, e_nzvz, e_TCOA, e_ZTHR: nonneg_real, r_sz, r_nzvz, r_TCOA, r_ZTHR: real, sz: double, nzvz: double, TCOA: double, ZTHR: double):
finite?(sz) AND finite?(nzvz) AND finite?(TCOA) AND finite?(ZTHR) AND finite?(Dsub(ZTHR, Z_COA)) AND finite?(ItoD(0)) AND
abs(DtoR(sz) - r_sz)<=e_sz AND abs(DtoR(nzvz) - r_nzvz)<=e_nzvz AND abs(DtoR(TCOA) - r_TCOA)<=e_TCOA AND abs(DtoR(ZTHR) - r_ZTHR)<=e_ZTHR
AND ((((NOT(((r_ZTHR - (abs(r_nzvz) * r_TCOA)) <= 0)) AND NOT((r_nzvz >= 0))) AND (r_nzvz /= 0)) AND ((NOT((Dsub(ZTHR, Dmul(Dabs(nzvz), TCOA)) <= ItoD(0))) AND NOT((nzvz >= ItoD(0)))) AND (nzvz /= ItoD(0)))) OR (((NOT(((r_ZTHR - (abs(r_nzvz) * r_TCOA)) <= 0)) AND (r_nzvz >= 0)) AND (r_nzvz /= 0)) AND ((NOT((Dsub(ZTHR, Dmul(Dabs(nzvz), TCOA)) <= ItoD(0))) AND (nzvz >= ItoD(0))) AND (nzvz /= ItoD(0)))) OR (((((r_ZTHR - (abs(r_nzvz) * r_TCOA)) <= 0) AND NOT((r_nzvz >= 0))) AND (r_nzvz /= 0)) AND (((Dsub(ZTHR, Dmul(Dabs(nzvz), TCOA)) <= ItoD(0)) AND NOT((nzvz >= ItoD(0)))) AND (nzvz /= ItoD(0)))) OR (((((r_ZTHR - (abs(r_nzvz) * r_TCOA)) <= 0) AND (r_nzvz >= 0)) AND (r_nzvz /= 0)) AND (((Dsub(ZTHR, Dmul(Dabs(nzvz), TCOA)) <= ItoD(0)) AND (nzvz >= ItoD(0))) AND (nzvz /= ItoD(0)))))
IMPLIES
abs(DtoR(coalt_entry_fp(sz, nzvz, TCOA, ZTHR)) - coalt_entry(r_sz, r_nzvz, r_TCOA, r_ZTHR))<=LET Z_COA:real=(abs(r_nzvz) * r_TCOA),
                                                                                                 Err_Z_COA:real=aerr_ulp_dp_mul(abs(r_nzvz), aerr_ulp_dp_abs(r_nzvz, e_nzvz), r_TCOA, e_TCOA)
                                                                                             IN max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_nzvz, e_nzvz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_nzvz, e_nzvz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_nzvz, e_nzvz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_nzvz, e_nzvz)))


%|- coalt_entry_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: Ddiv(Dsub(Dmul(ItoD(-1), H), sz), nzvz), Ddiv(Dsub(Dmul(ItoD(1), H), sz), nzvz)
% Control Flow: Stable
coalt_exit_fp_0 : LEMMA
FORALL(e_sz, e_nzvz, e_ZTHR: nonneg_real, r_sz, r_nzvz, r_ZTHR: real, sz: double, nzvz: double, ZTHR: double):
finite?(sz) AND finite?(nzvz) AND finite?(ZTHR) AND
abs(DtoR(sz) - r_sz)<=e_sz AND abs(DtoR(nzvz) - r_nzvz)<=e_nzvz AND abs(DtoR(ZTHR) - r_ZTHR)<=e_ZTHR
AND (((NOT((r_nzvz >= 0)) AND (r_nzvz /= 0)) AND (NOT((nzvz >= ItoD(0))) AND (nzvz /= ItoD(0)))) OR (((r_nzvz >= 0) AND (r_nzvz /= 0)) AND ((nzvz >= ItoD(0)) AND (nzvz /= ItoD(0)))))
IMPLIES
abs(DtoR(coalt_exit_fp(sz, nzvz, ZTHR)) - coalt_exit(r_sz, r_nzvz, r_ZTHR))<=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_nzvz, e_nzvz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_nzvz, e_nzvz))


%|- coalt_exit_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: B, T, LET centry:double=coalt_entry_fp(sz, vz, TCOA, ZTHR)
                               IN LET cexit:double=coalt_exit_fp(sz, vz, ZTHR)
                                  IN T, LET centry:double=coalt_entry_fp(sz, vz, TCOA, ZTHR)
                                        IN LET cexit:double=coalt_exit_fp(sz, vz, ZTHR)
                                           IN a, LET centry:double=coalt_entry_fp(sz, vz, TCOA, ZTHR)
                                                 IN LET cexit:double=coalt_exit_fp(sz, vz, ZTHR)
                                                    IN b
% Control Flow: Stable
vertical_WCV_entry_fp_0 : LEMMA
FORALL(e_B, e_T, e_sz, e_vz, e_TCOA, e_ZTHR: nonneg_real, r_B, r_T, r_sz, r_vz, r_TCOA, r_ZTHR: real, B: double, T: double, sz: double, vz: double, TCOA: double, ZTHR: double):
finite?(B) AND finite?(T) AND finite?(sz) AND finite?(vz) AND finite?(TCOA) AND finite?(ZTHR) AND finite?(Dsub(T, centry)) AND finite?(ItoD(0)) AND finite?(Dsub(cexit, B)) AND finite?(ItoD(0)) AND
abs(DtoR(B) - r_B)<=e_B AND abs(DtoR(T) - r_T)<=e_T AND abs(DtoR(sz) - r_sz)<=e_sz AND abs(DtoR(vz) - r_vz)<=e_vz AND abs(DtoR(TCOA) - r_TCOA)<=e_TCOA AND abs(DtoR(ZTHR) - r_ZTHR)<=e_ZTHR
AND ((((NOT(((abs(r_sz) - r_ZTHR) <= 0)) AND NOT((r_vz /= 0))) AND TRUE) AND ((NOT((Dsub(Dabs(sz), ZTHR) <= ItoD(0))) AND NOT((vz /= ItoD(0)))) AND TRUE)) OR ((((r_vz /= 0) AND (((r_T - coalt_entry(r_sz, r_vz, r_TCOA, r_ZTHR)) < 0) OR ((coalt_exit(r_sz, r_vz, r_ZTHR) - r_B) < 0))) AND TRUE) AND (((vz /= ItoD(0)) AND ((Dsub(T, coalt_entry_fp(sz, vz, TCOA, ZTHR)) < ItoD(0)) OR (Dsub(coalt_exit_fp(sz, vz, ZTHR), B) < ItoD(0)))) AND TRUE)) OR ((((r_vz /= 0) AND (NOT((((r_T - coalt_entry(r_sz, r_vz, r_TCOA, r_ZTHR)) < 0) OR ((coalt_exit(r_sz, r_vz, r_ZTHR) - r_B) < 0))) AND NOT(((r_B - coalt_entry(r_sz, r_vz, r_TCOA, r_ZTHR)) < 0)))) AND TRUE) AND (((vz /= ItoD(0)) AND (NOT(((Dsub(T, coalt_entry_fp(sz, vz, TCOA, ZTHR)) < ItoD(0)) OR (Dsub(coalt_exit_fp(sz, vz, ZTHR), B) < ItoD(0)))) AND NOT((Dsub(B, coalt_entry_fp(sz, vz, TCOA, ZTHR)) < ItoD(0))))) AND TRUE)) OR ((((r_vz /= 0) AND (NOT((((r_T - coalt_entry(r_sz, r_vz, r_TCOA, r_ZTHR)) < 0) OR ((coalt_exit(r_sz, r_vz, r_ZTHR) - r_B) < 0))) AND ((r_B - coalt_entry(r_sz, r_vz, r_TCOA, r_ZTHR)) < 0))) AND TRUE) AND (((vz /= ItoD(0)) AND (NOT(((Dsub(T, coalt_entry_fp(sz, vz, TCOA, ZTHR)) < ItoD(0)) OR (Dsub(coalt_exit_fp(sz, vz, ZTHR), B) < ItoD(0)))) AND (Dsub(B, coalt_entry_fp(sz, vz, TCOA, ZTHR)) < ItoD(0)))) AND TRUE)) OR ((((r_vz /= 0) AND (NOT(((r_ZTHR - (abs(r_vz) * r_TCOA)) <= 0)) AND NOT((r_vz >= 0)))) AND (r_vz /= 0)) AND (((vz /= ItoD(0)) AND (NOT((Dsub(ZTHR, Dmul(Dabs(vz), TCOA)) <= ItoD(0))) AND NOT((vz >= ItoD(0))))) AND (vz /= ItoD(0)))) OR ((((r_vz /= 0) AND (NOT(((r_ZTHR - (abs(r_vz) * r_TCOA)) <= 0)) AND (r_vz >= 0))) AND (r_vz /= 0)) AND (((vz /= ItoD(0)) AND (NOT((Dsub(ZTHR, Dmul(Dabs(vz), TCOA)) <= ItoD(0))) AND (vz >= ItoD(0)))) AND (vz /= ItoD(0)))) OR ((((r_vz /= 0) AND (((r_ZTHR - (abs(r_vz) * r_TCOA)) <= 0) AND NOT((r_vz >= 0)))) AND (r_vz /= 0)) AND (((vz /= ItoD(0)) AND ((Dsub(ZTHR, Dmul(Dabs(vz), TCOA)) <= ItoD(0)) AND NOT((vz >= ItoD(0))))) AND (vz /= ItoD(0)))) OR ((((r_vz /= 0) AND (((r_ZTHR - (abs(r_vz) * r_TCOA)) <= 0) AND (r_vz >= 0))) AND (r_vz /= 0)) AND (((vz /= ItoD(0)) AND ((Dsub(ZTHR, Dmul(Dabs(vz), TCOA)) <= ItoD(0)) AND (vz >= ItoD(0)))) AND (vz /= ItoD(0)))) OR ((((r_vz /= 0) AND NOT((r_vz >= 0))) AND (r_vz /= 0)) AND (((vz /= ItoD(0)) AND NOT((vz >= ItoD(0)))) AND (vz /= ItoD(0)))) OR ((((r_vz /= 0) AND (r_vz >= 0)) AND (r_vz /= 0)) AND (((vz /= ItoD(0)) AND (vz >= ItoD(0))) AND (vz /= ItoD(0)))) OR (((((abs(r_sz) - r_ZTHR) <= 0) AND NOT((r_vz /= 0))) AND TRUE) AND (((Dsub(Dabs(sz), ZTHR) <= ItoD(0)) AND NOT((vz /= ItoD(0)))) AND TRUE)))
IMPLIES
abs(DtoR(vertical_WCV_entry_fp(B, T, sz, vz, TCOA, ZTHR)) - vertical_WCV_entry(r_B, r_T, r_sz, r_vz, r_TCOA, r_ZTHR))<=max(max(max(max(max(max(max(max(max(LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
                                                                                                                                                                           IN (((--1 * r_ZTHR) - r_sz) / r_vz),
                                                                                                                                                               Err_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
                                                                                                                                                                                   Err_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
                                                                                                                                                                               IN max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
                                                                                                                                                           IN LET cexit:real=(((-1 * r_ZTHR) - r_sz) / r_vz),
                                                                                                                                                                  Err_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
                                                                                                                                                              IN max(e_T, max(Err_centry, e_B)), LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
                                                                                                                                                                                                                 IN (((--1 * r_Z_COA) - r_sz) / r_vz),
                                                                                                                                                                                                     Err_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
                                                                                                                                                                                                                         Err_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
                                                                                                                                                                                                                     IN max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
                                                                                                                                                                                                 IN LET cexit:real=(((-1 * r_ZTHR) - r_sz) / r_vz),
                                                                                                                                                                                                        Err_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
                                                                                                                                                                                                    IN max(e_T, max(Err_centry, e_B))), LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
                                                                                                                                                                                                                                                        IN (((-1 * r_ZTHR) - r_sz) / r_vz),
                                                                                                                                                                                                                                            Err_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
                                                                                                                                                                                                                                                                Err_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
                                                                                                                                                                                                                                                            IN max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
                                                                                                                                                                                                                                        IN LET cexit:real=(((-1 * r_ZTHR) - r_sz) / r_vz),
                                                                                                                                                                                                                                               Err_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
                                                                                                                                                                                                                                           IN max(e_T, max(Err_centry, e_B))), LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
                                                                                                                                                                                                                                                                                               IN (((-1 * r_Z_COA) - r_sz) / r_vz),
                                                                                                                                                                                                                                                                                   Err_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
                                                                                                                                                                                                                                                                                                       Err_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
                                                                                                                                                                                                                                                                                                   IN max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
                                                                                                                                                                                                                                                                               IN LET cexit:real=(((-1 * r_ZTHR) - r_sz) / r_vz),
                                                                                                                                                                                                                                                                                      Err_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
                                                                                                                                                                                                                                                                                  IN max(e_T, max(Err_centry, e_B))), LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
                                                                                                                                                                                                                                                                                                                                      IN (((--1 * r_ZTHR) - r_sz) / r_vz),
                                                                                                                                                                                                                                                                                                                          Err_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
                                                                                                                                                                                                                                                                                                                                              Err_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
                                                                                                                                                                                                                                                                                                                                          IN max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
                                                                                                                                                                                                                                                                                                                      IN LET cexit:real=(((1 * r_ZTHR) - r_sz) / r_vz),
                                                                                                                                                                                                                                                                                                                             Err_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
                                                                                                                                                                                                                                                                                                                         IN max(e_T, max(Err_centry, e_B))), LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
                                                                                                                                                                                                                                                                                                                                                                             IN (((--1 * r_Z_COA) - r_sz) / r_vz),
                                                                                                                                                                                                                                                                                                                                                                 Err_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
                                                                                                                                                                                                                                                                                                                                                                                     Err_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
                                                                                                                                                                                                                                                                                                                                                                                 IN max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
                                                                                                                                                                                                                                                                                                                                                             IN LET cexit:real=(((1 * r_ZTHR) - r_sz) / r_vz),
                                                                                                                                                                                                                                                                                                                                                                    Err_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
                                                                                                                                                                                                                                                                                                                                                                IN max(e_T, max(Err_centry, e_B))), LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
                                                                                                                                                                                                                                                                                                                                                                                                                    IN (((-1 * r_ZTHR) - r_sz) / r_vz),
                                                                                                                                                                                                                                                                                                                                                                                                        Err_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
                                                                                                                                                                                                                                                                                                                                                                                                                            Err_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
                                                                                                                                                                                                                                                                                                                                                                                                                        IN max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
                                                                                                                                                                                                                                                                                                                                                                                                    IN LET cexit:real=(((1 * r_ZTHR) - r_sz) / r_vz),
                                                                                                                                                                                                                                                                                                                                                                                                           Err_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
                                                                                                                                                                                                                                                                                                                                                                                                       IN max(e_T, max(Err_centry, e_B))), LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
                                                                                                                                                                                                                                                                                                                                                                                                                                                           IN (((-1 * r_Z_COA) - r_sz) / r_vz),
                                                                                                                                                                                                                                                                                                                                                                                                                                               Err_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Err_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
                                                                                                                                                                                                                                                                                                                                                                                                                                                               IN max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
                                                                                                                                                                                                                                                                                                                                                                                                                                           IN LET cexit:real=(((1 * r_ZTHR) - r_sz) / r_vz),
                                                                                                                                                                                                                                                                                                                                                                                                                                                  Err_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
                                                                                                                                                                                                                                                                                                                                                                                                                                              IN max(e_T, max(Err_centry, e_B))), e_B), e_T)


%|- vertical_WCV_entry_fp_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: Dsub(B, T), Dsub(T, B), LET centry:double=coalt_entry_fp(sz, vz, TCOA, ZTHR)
                                                 IN LET cexit:double=coalt_exit_fp(sz, vz, ZTHR)
                                                    IN Dsub(B, T), LET centry:double=coalt_entry_fp(sz, vz, TCOA, ZTHR)
                                                                   IN LET cexit:double=coalt_exit_fp(sz, vz, ZTHR)
                                                                      IN Dsub(a, a), LET centry:double=coalt_entry_fp(sz, vz, TCOA, ZTHR)
                                                                                     IN LET cexit:double=coalt_exit_fp(sz, vz, ZTHR)
                                                                                        IN Dsub(a, b), LET centry:double=coalt_entry_fp(sz, vz, TCOA, ZTHR)
                                                                                                       IN LET cexit:double=coalt_exit_fp(sz, vz, ZTHR)
                                                                                                          IN Dsub(b, a), LET centry:double=coalt_entry_fp(sz, vz, TCOA, ZTHR)
                                                                                                                         IN LET cexit:double=coalt_exit_fp(sz, vz, ZTHR)
                                                                                                                            IN Dsub(b, b)
% Control Flow: Stable
vertical_WCV_exit_minus_entry_fp_0 : LEMMA
FORALL(e_B, e_T, e_sz, e_vz, e_TCOA, e_ZTHR: nonneg_real, r_B, r_T, r_sz, r_vz, r_TCOA, r_ZTHR: real, B: double, T: double, sz: double, vz: double, TCOA: double, ZTHR: double):
finite?(B) AND finite?(T) AND finite?(sz) AND finite?(vz) AND finite?(TCOA) AND finite?(ZTHR) AND finite?(Dsub(T, centry)) AND finite?(ItoD(0)) AND finite?(Dsub(cexit, B)) AND finite?(ItoD(0)) AND
abs(DtoR(B) - r_B)<=e_B AND abs(DtoR(T) - r_T)<=e_T AND abs(DtoR(sz) - r_sz)<=e_sz AND abs(DtoR(vz) - r_vz)<=e_vz AND abs(DtoR(TCOA) - r_TCOA)<=e_TCOA AND abs(DtoR(ZTHR) - r_ZTHR)<=e_ZTHR
AND ((((NOT(((abs(r_sz) - r_ZTHR) <= 0)) AND NOT((r_vz /= 0))) AND TRUE) AND ((NOT((Dsub(Dabs(sz), ZTHR) <= ItoD(0))) AND NOT((vz /= ItoD(0)))) AND TRUE)) OR ((((r_vz /= 0) AND (((r_T - coalt_entry(r_sz, r_vz, r_TCOA, r_ZTHR)) < 0) OR ((coalt_exit(r_sz, r_vz, r_ZTHR) - r_B) < 0))) AND TRUE) AND (((vz /= ItoD(0)) AND ((Dsub(T, coalt_entry_fp(sz, vz, TCOA, ZTHR)) < ItoD(0)) OR (Dsub(coalt_exit_fp(sz, vz, ZTHR), B) < ItoD(0)))) AND TRUE)) OR ((((r_vz /= 0) AND (NOT((((r_T - coalt_entry(r_sz, r_vz, r_TCOA, r_ZTHR)) < 0) OR ((coalt_exit(r_sz, r_vz, r_ZTHR) - r_B) < 0))) AND (NOT(((r_T - coalt_exit(r_sz, r_vz, r_ZTHR)) > 0)) AND NOT(((r_B - coalt_entry(r_sz, r_vz, r_TCOA, r_ZTHR)) < 0))))) AND TRUE) AND (((vz /= ItoD(0)) AND (NOT(((Dsub(T, coalt_entry_fp(sz, vz, TCOA, ZTHR)) < ItoD(0)) OR (Dsub(coalt_exit_fp(sz, vz, ZTHR), B) < ItoD(0)))) AND (NOT((Dsub(T, coalt_exit_fp(sz, vz, ZTHR)) > ItoD(0))) AND NOT((Dsub(B, coalt_entry_fp(sz, vz, TCOA, ZTHR)) < ItoD(0)))))) AND TRUE)) OR ((((r_vz /= 0) AND (NOT((((r_T - coalt_entry(r_sz, r_vz, r_TCOA, r_ZTHR)) < 0) OR ((coalt_exit(r_sz, r_vz, r_ZTHR) - r_B) < 0))) AND (NOT(((r_T - coalt_exit(r_sz, r_vz, r_ZTHR)) > 0)) AND ((r_B - coalt_entry(r_sz, r_vz, r_TCOA, r_ZTHR)) < 0)))) AND TRUE) AND (((vz /= ItoD(0)) AND (NOT(((Dsub(T, coalt_entry_fp(sz, vz, TCOA, ZTHR)) < ItoD(0)) OR (Dsub(coalt_exit_fp(sz, vz, ZTHR), B) < ItoD(0)))) AND (NOT((Dsub(T, coalt_exit_fp(sz, vz, ZTHR)) > ItoD(0))) AND (Dsub(B, coalt_entry_fp(sz, vz, TCOA, ZTHR)) < ItoD(0))))) AND TRUE)) OR ((((r_vz /= 0) AND (NOT((((r_T - coalt_entry(r_sz, r_vz, r_TCOA, r_ZTHR)) < 0) OR ((coalt_exit(r_sz, r_vz, r_ZTHR) - r_B) < 0))) AND (((r_T - coalt_exit(r_sz, r_vz, r_ZTHR)) > 0) AND NOT(((r_B - coalt_entry(r_sz, r_vz, r_TCOA, r_ZTHR)) < 0))))) AND TRUE) AND (((vz /= ItoD(0)) AND (NOT(((Dsub(T, coalt_entry_fp(sz, vz, TCOA, ZTHR)) < ItoD(0)) OR (Dsub(coalt_exit_fp(sz, vz, ZTHR), B) < ItoD(0)))) AND ((Dsub(T, coalt_exit_fp(sz, vz, ZTHR)) > ItoD(0)) AND NOT((Dsub(B, coalt_entry_fp(sz, vz, TCOA, ZTHR)) < ItoD(0)))))) AND TRUE)) OR ((((r_vz /= 0) AND (NOT((((r_T - coalt_entry(r_sz, r_vz, r_TCOA, r_ZTHR)) < 0) OR ((coalt_exit(r_sz, r_vz, r_ZTHR) - r_B) < 0))) AND (((r_T - coalt_exit(r_sz, r_vz, r_ZTHR)) > 0) AND ((r_B - coalt_entry(r_sz, r_vz, r_TCOA, r_ZTHR)) < 0)))) AND TRUE) AND (((vz /= ItoD(0)) AND (NOT(((Dsub(T, coalt_entry_fp(sz, vz, TCOA, ZTHR)) < ItoD(0)) OR (Dsub(coalt_exit_fp(sz, vz, ZTHR), B) < ItoD(0)))) AND ((Dsub(T, coalt_exit_fp(sz, vz, ZTHR)) > ItoD(0)) AND (Dsub(B, coalt_entry_fp(sz, vz, TCOA, ZTHR)) < ItoD(0))))) AND TRUE)) OR ((((r_vz /= 0) AND (NOT(((r_ZTHR - (abs(r_vz) * r_TCOA)) <= 0)) AND NOT((r_vz >= 0)))) AND (r_vz /= 0)) AND (((vz /= ItoD(0)) AND (NOT((Dsub(ZTHR, Dmul(Dabs(vz), TCOA)) <= ItoD(0))) AND NOT((vz >= ItoD(0))))) AND (vz /= ItoD(0)))) OR ((((r_vz /= 0) AND (NOT(((r_ZTHR - (abs(r_vz) * r_TCOA)) <= 0)) AND (r_vz >= 0))) AND (r_vz /= 0)) AND (((vz /= ItoD(0)) AND (NOT((Dsub(ZTHR, Dmul(Dabs(vz), TCOA)) <= ItoD(0))) AND (vz >= ItoD(0)))) AND (vz /= ItoD(0)))) OR ((((r_vz /= 0) AND (((r_ZTHR - (abs(r_vz) * r_TCOA)) <= 0) AND NOT((r_vz >= 0)))) AND (r_vz /= 0)) AND (((vz /= ItoD(0)) AND ((Dsub(ZTHR, Dmul(Dabs(vz), TCOA)) <= ItoD(0)) AND NOT((vz >= ItoD(0))))) AND (vz /= ItoD(0)))) OR ((((r_vz /= 0) AND (((r_ZTHR - (abs(r_vz) * r_TCOA)) <= 0) AND (r_vz >= 0))) AND (r_vz /= 0)) AND (((vz /= ItoD(0)) AND ((Dsub(ZTHR, Dmul(Dabs(vz), TCOA)) <= ItoD(0)) AND (vz >= ItoD(0)))) AND (vz /= ItoD(0)))) OR ((((r_vz /= 0) AND NOT((r_vz >= 0))) AND (r_vz /= 0)) AND (((vz /= ItoD(0)) AND NOT((vz >= ItoD(0)))) AND (vz /= ItoD(0)))) OR ((((r_vz /= 0) AND (r_vz >= 0)) AND (r_vz /= 0)) AND (((vz /= ItoD(0)) AND (vz >= ItoD(0))) AND (vz /= ItoD(0)))) OR (((((abs(r_sz) - r_ZTHR) <= 0) AND NOT((r_vz /= 0))) AND TRUE) AND (((Dsub(Dabs(sz), ZTHR) <= ItoD(0)) AND NOT((vz /= ItoD(0)))) AND TRUE)))
IMPLIES
abs(DtoR(vertical_WCV_exit_minus_entry_fp(B, T, sz, vz, TCOA, ZTHR)) - vertical_WCV_exit_minus_entry(r_B, r_T, r_sz, r_vz, r_TCOA, r_ZTHR))<=max(max(max(max(max(max(max(max(max(LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
                                                                                                                                                                                                 IN (((--1 * r_ZTHR) - r_sz) / r_vz),
                                                                                                                                                                                     Err_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
                                                                                                                                                                                                         Err_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
                                                                                                                                                                                                     IN max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
                                                                                                                                                                                 IN LET cexit:real=(((-1 * r_ZTHR) - r_sz) / r_vz),
                                                                                                                                                                                        Err_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
                                                                                                                                                                                    IN max(aerr_ulp_dp_sub(r_B, e_B, r_T, e_T), max(aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B)))), LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
r_Z_COA) - r_sz) / r_vz),
rr_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Err_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
cexit:real=(((-1 * r_ZTHR) - r_sz) / r_vz),
rr_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
max(aerr_ulp_dp_sub(r_B, e_B, r_T, e_T), max(aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B))))), LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
r_ZTHR) - r_sz) / r_vz),
rr_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
rr_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
cexit:real=(((-1 * r_ZTHR) - r_sz) / r_vz),
rr_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   IN max(aerr_ulp_dp_sub(r_B, e_B, r_T, e_T), max(aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B))))), LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
r_Z_COA) - r_sz) / r_vz),
rr_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Err_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    IN max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
cexit:real=(((-1 * r_ZTHR) - r_sz) / r_vz),
rr_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
max(aerr_ulp_dp_sub(r_B, e_B, r_T, e_T), max(aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B))))), LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
r_ZTHR) - r_sz) / r_vz),
rr_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
rr_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
cexit:real=(((1 * r_ZTHR) - r_sz) / r_vz),
rr_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
max(aerr_ulp_dp_sub(r_B, e_B, r_T, e_T), max(aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B))))), LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
r_Z_COA) - r_sz) / r_vz),
rr_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
rr_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
cexit:real=(((1 * r_ZTHR) - r_sz) / r_vz),
rr_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
max(aerr_ulp_dp_sub(r_B, e_B, r_T, e_T), max(aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B))))), LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
r_ZTHR) - r_sz) / r_vz),
rr_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
rr_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
cexit:real=(((1 * r_ZTHR) - r_sz) / r_vz),
rr_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
max(aerr_ulp_dp_sub(r_B, e_B, r_T, e_T), max(aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B))))), LET centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA)
r_Z_COA) - r_sz) / r_vz),
rr_centry:real=LET Z_COA:real=(abs(r_vz) * r_TCOA),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Err_Z_COA:real=aerr_ulp_dp_mul(abs(r_vz), aerr_ulp_dp_abs(r_vz, e_vz), r_TCOA, e_TCOA)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    IN max(max(aerr_ulp_dp_div(((--1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_Z_COA) - r_sz), max(aerr_ulp_dp_sub((--1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_Z_COA), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_Z_COA, Err_Z_COA)), r_sz, e_sz)), r_vz, e_vz)), max(aerr_ulp_dp_div(((--1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((--1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(--1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(-1, max(aerr_int_dp(--1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1))))), aerr_int_dp(-1, max(aerr_int_neg(-1, max((0 / 1), (0 / 1))), aerr_int_neg(1, max((0 / 1), (0 / 1)))))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz)))
cexit:real=(((1 * r_ZTHR) - r_sz) / r_vz),
rr_cexit:real=max(aerr_ulp_dp_div(((-1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz), aerr_ulp_dp_div(((1 * r_ZTHR) - r_sz), max(aerr_ulp_dp_sub((-1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz), aerr_ulp_dp_sub((1 * r_ZTHR), max(aerr_ulp_dp_mul(-1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR), aerr_ulp_dp_mul(1, max(aerr_int_dp(-1, max((0 / 1), (0 / 1))), aerr_int_dp(1, max((0 / 1), (0 / 1)))), r_ZTHR, e_ZTHR)), r_sz, e_sz)), r_vz, e_vz))
max(aerr_ulp_dp_sub(r_B, e_B, r_T, e_T), max(aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_T, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_B, max(Err_centry, e_B)), aerr_ulp_dp_sub(r_cexit, max(Err_cexit, e_T), r_centry, max(Err_centry, e_B))))), aerr_ulp_dp_sub(r_T, e_T, r_B, e_B)), aerr_ulp_dp_sub(r_B, e_B, r_T, e_T))


%|- vertical_WCV_exit_minus_entry_fp_0: PROOF
%|- (precisa)
%|- QED


END cert_wcv_detection_taumod
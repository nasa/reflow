% This file is automatically generated by PRECiSA 

wcv_detection_taumod_fp: THEORY
BEGIN

IMPORTING axm_bnd@ieee754_double

tcoa_fp(sz: double, vz: double): double  = IF (Dmul(sz, vz) < ItoD(0))
                                           THEN Dneg(Ddiv(sz, vz))
                                           ELSE ItoD(-1)
                                           ENDIF
tcpa_fp(sx: double, vx: double, sy: double, vy: double): double  = IF (Dadd(Dmul(vx, vx), Dmul(vy, vy)) /= ItoD(0))
                                                                   THEN Ddiv(Dneg(Dadd(Dmul(sx, vx), Dmul(sy, vy))), Dadd(Dmul(vx, vx), Dmul(vy, vy)))
                                                                   ELSE ItoD(0)
                                                                   ENDIF
taumod_fp(sx: double, vx: double, sy: double, vy: double, DTHR: double): double  = IF (Dadd(Dmul(sx, vx), Dmul(sy, vy)) < ItoD(0))
                                                                                   THEN Ddiv(Dsub(Dmul(DTHR, DTHR), Dadd(Dmul(sx, sx), Dmul(sy, sy))), Dadd(Dmul(sx, vx), Dmul(sy, vy)))
                                                                                   ELSE ItoD(-1)
                                                                                   ENDIF
horizontal_wcv_fp(sx: double, sy: double, vx: double, vy: double, DTHR: double, TTHR: double): bool  = LET tm:double=taumod_fp(sx, vx, sy, vy, DTHR),
                                                                                                           tc:double=tcpa_fp(sx, vx, sy, vy)
                                                                                                       IN ((Dsub(Dadd(Dmul(sx, sx), Dmul(sy, sy)), Dmul(DTHR, DTHR)) <= ItoD(0)) OR (((Dsub(Dadd(Dmul(Dadd(sx, Dmul(tc, vx)), Dadd(sx, Dmul(tc, vx))), Dmul(Dadd(sy, Dmul(tc, vy)), Dadd(sy, Dmul(tc, vy)))), Dmul(DTHR, DTHR)) <= ItoD(0)) AND (ItoD(0) <= tm)) AND (Dsub(tm, TTHR) <= ItoD(0))))
vertical_WCV_fp(sz: double, vz: double, ZTHR: double, TCOA: double): bool  = ((Dsub(Dabs(sz), ZTHR) <= ItoD(0)) OR ((ItoD(0) <= tcoa_fp(sz, vz)) AND (Dsub(tcoa_fp(sz, vz), TCOA) <= ItoD(0))))
WCV_fp(sx: double, sy: double, sz: double, vx: double, vy: double, vz: double, DTHR: double, TTHR: double, ZTHR: double, TCOA: double): bool  = (horizontal_wcv_fp(sx, sy, vx, vy, DTHR, TTHR) AND vertical_WCV_fp(sz, vz, ZTHR, TCOA))
sign_fp(x: double): int  = IF (x >= ItoD(0))
                           THEN 1
                           ELSE -1
                           ENDIF
max__fp(a: double, b: double): double  = IF (Dsub(a, b) < ItoD(0))
                                         THEN b
                                         ELSE a
                                         ENDIF
min__fp(a: double, b: double): double  = IF (Dsub(a, b) > ItoD(0))
                                         THEN b
                                         ELSE a
                                         ENDIF
discr_fp(a: double, b: double, c: double): double  = Dsub(Dmul(b, b), Dmul(Dmul(ItoD(4), a), c))
root_pos_fp(a: double, b: double, c: double): double  = IF ((Dsub(Dmul(b, b), Dmul(Dmul(ItoD(4), a), c)) >= ItoD(0)) AND (a /= ItoD(0)))
                                                        THEN Ddiv(Dadd(Dneg(b), Dsqrt(Dabs(Dsub(Dmul(b, b), Dmul(Dmul(ItoD(4), a), c))))), Dmul(ItoD(2), a))
                                                        ELSE ItoD(0)
                                                        ENDIF
root_neg_fp(a: double, b: double, c: double): double  = IF ((Dsub(Dmul(b, b), Dmul(Dmul(ItoD(4), a), c)) >= ItoD(0)) AND (a /= ItoD(0)))
                                                        THEN Ddiv(Dsub(Dneg(b), Dsqrt(Dabs(Dsub(Dmul(b, b), Dmul(Dmul(ItoD(4), a), c))))), Dmul(ItoD(2), a))
                                                        ELSE ItoD(0)
                                                        ENDIF
inner_product_fp(sx: double, sy: double, vx: double, vy: double): double  = Dadd(Dmul(sx, vx), Dmul(sy, vy))
cross_product_fp(sx: double, sy: double, vx: double, vy: double): double  = Dsub(Dmul(sx, vy), Dmul(sy, vx))
sq_fp(sx: double, sy: double): double  = inner_product_fp(sx, sy, sx, sy)
proj_fp(sx: double, vx: double, t: double): double  = Dadd(sx, Dmul(vx, t))
Delta_fp(sx: double, sy: double, vx: double, vy: double, D: double): double  = Dsub(Dmul(Dmul(D, D), sq_fp(vx, vy)), Dmul(cross_product_fp(sx, sy, vx, vy), cross_product_fp(sx, sy, vx, vy)))
Theta_D_pos_fp(D: double, sx: double, sy: double, vx: double, vy: double): double  = LET a:double=sq_fp(vx, vy),
                                                                                         b:double=inner_product_fp(sx, sy, vx, vy),
                                                                                         c:double=Dsub(sq_fp(sx, sy), Dmul(D, D))
                                                                                     IN root_pos_fp(a, Dmul(ItoD(2), b), c)
Theta_D_neg_fp(D: double, sx: double, sy: double, vx: double, vy: double): double  = LET a:double=sq_fp(vx, vy),
                                                                                         b:double=inner_product_fp(sx, sy, vx, vy),
                                                                                         c:double=Dsub(sq_fp(sx, sy), Dmul(D, D))
                                                                                     IN root_neg_fp(a, Dmul(ItoD(2), b), c)
Theta_H_pos_fp(sz: double, nzvz: double, H: double): double  = Ddiv(Dsub(Dmul(ItoD(sign_fp(nzvz)), H), sz), nzvz)
Theta_H_neg_fp(sz: double, nzvz: double, H: double): double  = Ddiv(Dsub(Dmul(ItoD(Ineg(sign_fp(nzvz))), H), sz), nzvz)
horizontal_WCV_taumod_interval_fp(T: double, sx: double, sy: double, vx: double, vy: double, TAUMOD: double, DTHR: double): bool  = LET theta_d_pos:double=Theta_D_pos_fp(DTHR, sx, sy, vx, vy),
                                                                                                                                        c:double=Dsub(Dadd(sq_fp(sx, sy), Dmul(TAUMOD, inner_product_fp(sx, sy, vx, vy))), Dmul(DTHR, DTHR)),
                                                                                                                                        b:double=Dadd(Dmul(ItoD(2), inner_product_fp(sx, sy, vx, vy)), Dmul(TAUMOD, sq_fp(vx, vy))),
                                                                                                                                        a:double=sq_fp(vx, vy)
                                                                                                                                    IN LET root_neg_var:double=root_neg_fp(a, b, c)
                                                                                                                                       IN IF ((a /= ItoD(0)) AND (Dsub(sq_fp(sx, sy), Dmul(DTHR, DTHR)) <= ItoD(0)))
                                                                                                                                          THEN (ItoD(0) <= min__fp(T, theta_d_pos))
                                                                                                                                          ELSIF (Dsub(sq_fp(sx, sy), Dmul(DTHR, DTHR)) <= ItoD(0))
                                                                                                                                          THEN TRUE
                                                                                                                                          ELSIF ((inner_product_fp(sx, sy, vx, vy) >= ItoD(0)) OR (discr_fp(a, b, c) < ItoD(0)))
                                                                                                                                          THEN FALSE
                                                                                                                                          ELSIF ((Delta_fp(sx, sy, vx, vy, DTHR) >= ItoD(0)) AND (Dsub(root_neg_var, T) <= ItoD(0)))
                                                                                                                                          THEN (Dsub(max__fp(ItoD(0), root_neg_var), min__fp(T, theta_d_pos)) <= ItoD(0))
                                                                                                                                          ELSE FALSE
                                                                                                                                          ENDIF
coalt_entry_fp(sz: double, nzvz: double, TCOA: double, ZTHR: double): double  = LET Z_COA:double=Dmul(Dabs(nzvz), TCOA)
                                                                                IN IF (Dsub(ZTHR, Z_COA) <= ItoD(0))
                                                                                   THEN Theta_H_neg_fp(sz, nzvz, Z_COA)
                                                                                   ELSE Theta_H_neg_fp(sz, nzvz, ZTHR)
                                                                                   ENDIF
coalt_exit_fp(sz: double, nzvz: double, ZTHR: double): double  = Theta_H_pos_fp(sz, nzvz, ZTHR)
vertical_WCV_entry_fp(B: double, T: double, sz: double, vz: double, TCOA: double, ZTHR: double): double  = IF (vz /= ItoD(0))
                                                                                                           THEN LET centry:double=coalt_entry_fp(sz, vz, TCOA, ZTHR),
                                                                                                                    cexit:double=coalt_exit_fp(sz, vz, ZTHR)
                                                                                                                IN IF ((Dsub(T, centry) < ItoD(0)) OR (Dsub(cexit, B) < ItoD(0)))
                                                                                                                   THEN T
                                                                                                                   ELSE max__fp(B, centry)
                                                                                                                   ENDIF
                                                                                                           ELSIF (Dsub(Dabs(sz), ZTHR) <= ItoD(0))
                                                                                                           THEN B
                                                                                                           ELSE T
                                                                                                           ENDIF
vertical_WCV_exit_minus_entry_fp(B: double, T: double, sz: double, vz: double, TCOA: double, ZTHR: double): double  = IF (vz /= ItoD(0))
                                                                                                                      THEN LET centry:double=coalt_entry_fp(sz, vz, TCOA, ZTHR),
                                                                                                                               cexit:double=coalt_exit_fp(sz, vz, ZTHR)
                                                                                                                           IN IF ((Dsub(T, centry) < ItoD(0)) OR (Dsub(cexit, B) < ItoD(0)))
                                                                                                                              THEN Dsub(B, T)
                                                                                                                              ELSE Dsub(min__fp(T, cexit), max__fp(B, centry))
                                                                                                                              ENDIF
                                                                                                                      ELSIF (Dsub(Dabs(sz), ZTHR) <= ItoD(0))
                                                                                                                      THEN Dsub(T, B)
                                                                                                                      ELSE Dsub(B, T)
                                                                                                                      ENDIF
WCV_interval_fp(B: double, T: double, sx: double, sy: double, sz: double, vx: double, vy: double, vz: double, TAUMOD: double, TCOA: double, DTHR: double, TTHR: double, ZTHR: double): bool  = IF (vertical_WCV_exit_minus_entry_fp(B, T, sz, vz, TCOA, ZTHR) < ItoD(0))
                                                                                                                                                                                               THEN FALSE
                                                                                                                                                                                               ELSIF (vertical_WCV_exit_minus_entry_fp(B, T, sz, vz, TCOA, ZTHR) > ItoD(0))
                                                                                                                                                                                               THEN horizontal_WCV_taumod_interval_fp(B, B, B, vx, vy, TAUMOD, DTHR)
                                                                                                                                                                                               ELSIF horizontal_wcv_fp(B, B, vx, vy, DTHR, TTHR)
                                                                                                                                                                                               THEN TRUE
                                                                                                                                                                                               ELSE FALSE
                                                                                                                                                                                               ENDIF

END wcv_detection_taumod_fp